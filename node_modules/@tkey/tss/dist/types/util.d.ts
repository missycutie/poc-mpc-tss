import { EllipticCurve, Point } from "@tkey/common-types";
import { PointHex } from "@toruslabs/rss-client";
import BN from "bn.js";
export declare const kCombinations: (s: number | number[], k: number) => number[][];
export declare function generateSalt(ec: EllipticCurve): string;
export declare function getLagrangeCoeffs(ecCurve: EllipticCurve, _allIndexes: number[] | BN[], _myIndex: number | BN, _target?: number | BN): BN;
export declare function lagrangeInterpolation(ecCurve: EllipticCurve, shares: BN[], nodeIndex: BN[]): BN;
export declare function pointToHex(p: Point): PointHex;
export declare function getPubKeyPoint(s: BN, ec: EllipticCurve): Point;
export declare const DELIMITERS: {
    Delimiter1: string;
    Delimiter2: string;
    Delimiter3: string;
    Delimiter4: string;
};
export declare function getExtendedVerifierId(verifierId: string, tssTag: string, tssNonce: number): string;
export declare function getEd25519SeedStoreDomainKey(tssTag?: string): string;
