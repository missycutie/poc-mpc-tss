/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  ServiceProviderBase: () => (/* reexport */ src_ServiceProviderBase)
});

;// CONCATENATED MODULE: external "@babel/runtime/helpers/defineProperty"
const defineProperty_namespaceObject = require("@babel/runtime/helpers/defineProperty");
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_namespaceObject);
;// CONCATENATED MODULE: external "@tkey/common-types"
const common_types_namespaceObject = require("@tkey/common-types");
;// CONCATENATED MODULE: external "bn.js"
const external_bn_js_namespaceObject = require("bn.js");
var external_bn_js_default = /*#__PURE__*/__webpack_require__.n(external_bn_js_namespaceObject);
;// CONCATENATED MODULE: ./src/ServiceProviderBase.ts



class ServiceProviderBase {
  constructor({
    enableLogging = false,
    postboxKey
  }) {
    defineProperty_default()(this, "enableLogging", void 0);
    // For easy serialization
    defineProperty_default()(this, "postboxKey", void 0);
    defineProperty_default()(this, "serviceProviderName", void 0);
    defineProperty_default()(this, "migratableKey", null);
    this.enableLogging = enableLogging;
    this.postboxKey = new (external_bn_js_default())(postboxKey, "hex");
    this.serviceProviderName = "ServiceProviderBase";
  }
  static fromJSON(value) {
    const {
      enableLogging,
      postboxKey,
      serviceProviderName
    } = value;
    if (serviceProviderName !== "ServiceProviderBase") return undefined;
    return new ServiceProviderBase({
      enableLogging,
      postboxKey
    });
  }
  async encrypt(msg) {
    const publicKey = this.retrievePubKey("ecc");
    return (0,common_types_namespaceObject.encrypt)(publicKey, msg);
  }
  async decrypt(msg) {
    return (0,common_types_namespaceObject.decrypt)((0,common_types_namespaceObject.toPrivKeyECC)(this.postboxKey), msg);
  }
  retrievePubKeyPoint() {
    return (0,common_types_namespaceObject.toPrivKeyEC)(this.postboxKey).getPublic();
  }
  retrievePubKey(type) {
    if (type === "ecc") {
      return (0,common_types_namespaceObject.getPubKeyECC)(this.postboxKey);
    }
    throw new Error("Unsupported pub key type");
  }
  sign(msg) {
    const tmp = new (external_bn_js_default())(msg, "hex");
    const sig = (0,common_types_namespaceObject.toPrivKeyEC)(this.postboxKey).sign(tmp.toString("hex"));
    return Buffer.from(sig.r.toString(16, 64) + sig.s.toString(16, 64) + new (external_bn_js_default())(0).toString(16, 2), "hex").toString("base64");
  }
  toJSON() {
    return {
      enableLogging: this.enableLogging,
      postboxKey: this.postboxKey.toString("hex"),
      serviceProviderName: this.serviceProviderName
    };
  }
}
/* harmony default export */ const src_ServiceProviderBase = (ServiceProviderBase);
;// CONCATENATED MODULE: ./src/index.ts

module.exports = __webpack_exports__;
/******/ })()
;