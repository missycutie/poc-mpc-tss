'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var BN = require('bn.js');
var english = require('./english.js');
var errors = require('./errors.js');
var utils = require('./utils.js');

const SHARE_SERIALIZATION_MODULE_NAME = "shareSerialization";
class ShareSerializationModule {
  constructor() {
    _defineProperty(this, "moduleName", void 0);
    _defineProperty(this, "tbSDK", void 0);
    this.moduleName = SHARE_SERIALIZATION_MODULE_NAME;
  }
  static serializeMnemonic(share) {
    return utils.entropyToMnemonic(share.toString("hex").padStart(64, "0"), english.english);
  }
  static deserializeMnemonic(share) {
    return new BN(utils.mnemonicToEntropy(share, english.english), "hex");
  }
  setModuleReferences(tbSDK) {
    this.tbSDK = tbSDK;
    this.tbSDK._addShareSerializationMiddleware(this.serialize.bind(this), this.deserialize.bind(this));
  }

  // eslint-disable-next-line
  async initialize() {}
  async serialize(share, type) {
    if (type === "mnemonic") {
      return ShareSerializationModule.serializeMnemonic(share);
    }
    throw errors.typeNotSupported();
  }
  async deserialize(serializedShare, type) {
    if (type === "mnemonic") return ShareSerializationModule.deserializeMnemonic(serializedShare);
    throw errors.typeNotSupported();
  }
}
var ShareSerializationModule$1 = ShareSerializationModule;

exports.SHARE_SERIALIZATION_MODULE_NAME = SHARE_SERIALIZATION_MODULE_NAME;
exports.default = ShareSerializationModule$1;
