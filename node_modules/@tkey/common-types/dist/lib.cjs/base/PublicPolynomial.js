'use strict';

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Point = require('./Point.js');

class PublicPolynomial {
  constructor(polynomialCommitments) {
    _defineProperty(this, "polynomialCommitments", void 0);
    _defineProperty(this, "polynomialId", void 0);
    this.polynomialCommitments = polynomialCommitments;
  }
  static fromJSON(value) {
    const points = value.polynomialCommitments.map(x => Point.fromJSON(x));
    return new PublicPolynomial(points);
  }
  getThreshold() {
    return this.polynomialCommitments.length;
  }
  getPolynomialID() {
    let idSeed = "";
    for (let i = 0; i < this.polynomialCommitments.length; i += 1) {
      let nextChunk = this.polynomialCommitments[i].encode("elliptic-compressed").toString();
      if (i !== 0) {
        nextChunk = `|${nextChunk}`;
      }
      idSeed += nextChunk;
    }
    this.polynomialId = idSeed;
    return this.polynomialId;
  }
  toJSON() {
    return {
      polynomialCommitments: this.polynomialCommitments
    };
  }
}

// @flow

var PublicPolynomial$1 = PublicPolynomial;

module.exports = PublicPolynomial$1;
