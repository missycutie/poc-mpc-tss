import { getPublic } from '@toruslabs/eccrypto';
import BN from 'bn.js';
import { secp256k1 } from '../utils.js';
import Point from './Point.js';

// These functions are here because BN can't be extended
const toPrivKeyEC = bn => secp256k1.keyFromPrivate(bn.toString("hex", 64));
const toPrivKeyECC = bn => {
  const tmp = new BN(bn, "hex");
  return Buffer.from(tmp.toString("hex", 64), "hex");
};
const getPubKeyEC = bn => secp256k1.keyFromPrivate(bn.toString("hex", 64)).getPublic();
const getPubKeyECC = bn => getPublic(toPrivKeyECC(bn));
const getPubKeyPoint = bn => {
  const pubKeyEc = getPubKeyEC(bn);
  return new Point(pubKeyEc.getX().toString("hex"), pubKeyEc.getY().toString("hex"));
};

export { getPubKeyEC, getPubKeyECC, getPubKeyPoint, toPrivKeyEC, toPrivKeyECC };
