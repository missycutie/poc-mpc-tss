import type { WasmLib } from "@toruslabs/tss-frost-lib";
export declare function generateRngSeed(): Uint8Array;
export type Signature = string;
/**
 * Initiate and run the signing protocol with the designated parties.
 *
 * @param session - The signing session identifier.
 * @param signatures - The signatures used for authentication.
 * @param server_ids - The server identities. Must be equal to their share's
 * x-coordinate.
 * @param server_endpoints - The network endpoints of the servers corresponding
 * to `server_ids`.
 * @param client_index - The client identity. Must be equal to the share's
 * x-coordinate.
 * @param keyshare - The client key share.
 * @param pubkey - The public key.
 * @param msg - The message to be signed.
 * @param server_coefficients - Optional coefficients for server shares. Can be
 * used for converting between different secret sharing hierarchies.
 * @returns
 */
export declare function sign(wasmLib: WasmLib, session: string, signatures: string[], server_ids: number[], server_endpoints: string[], client_index: number, keyshare: string, pubkey: string, msg: Uint8Array, server_coefficients?: string[] | undefined): Promise<Signature>;
