{
  "version": 3,
  "sources": ["../../@chaitanyapotti/register-service-worker/index.js", "../../@tkey/common-types/dist/lib.esm/baseTypes/commonTypes.js", "../../@toruslabs/customauth/dist/lib.esm/utils/enums.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/DiscordHandler.js", "../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/AbstractLoginHandler.js", "../../@toruslabs/customauth/dist/lib.esm/utils/helpers.js", "../../@toruslabs/customauth/dist/lib.esm/utils/loglevel.js", "../../@toruslabs/customauth/dist/lib.esm/utils/PopupHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/FacebookHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/GoogleHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/JwtHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/MockLoginHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/PasskeysHandler.js", "../../@toruslabs/customauth/dist/lib.esm/utils/sessionHelper.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/PasswordlessHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/TwitchHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/Web3AuthPasswordlessHandler.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/interfaces.js", "../../@toruslabs/customauth/dist/lib.esm/handlers/HandlerFactory.js", "../../@toruslabs/fetch-node-details/node_modules/@toruslabs/constants/dist/lib.esm/constants.js", "../../@toruslabs/fnd-base/node_modules/@toruslabs/constants/dist/lib.esm/constants.js", "../../@toruslabs/fnd-base/dist/lib.esm/endpoints.js", "../../@toruslabs/fnd-base/dist/lib.esm/pubKeys.js", "../../@toruslabs/fnd-base/dist/lib.esm/sapphireNetworkConfig.js", "../../@toruslabs/fnd-base/dist/lib.esm/utils.js", "../../@toruslabs/fetch-node-details/dist/lib.esm/nodeDetailManager.js", "../../@toruslabs/customauth/dist/lib.esm/registerServiceWorker.js", "../../@toruslabs/customauth/dist/lib.esm/sentry.js", "../../@toruslabs/customauth/dist/lib.esm/utils/error.js", "../../@toruslabs/customauth/node_modules/@toruslabs/eccrypto/dist/lib.esm/index.js", "../../@toruslabs/customauth/dist/lib.esm/utils/StorageHelper.js", "../../@toruslabs/customauth/dist/lib.esm/login.js", "../../@tkey/common-types/node_modules/@toruslabs/eccrypto/dist/lib.esm/index.js", "../../@tkey/common-types/dist/lib.esm/utils.js", "../../@tkey/common-types/dist/lib.esm/base/Point.js", "../../@tkey/common-types/dist/lib.esm/base/Polynomial.js", "../../@tkey/common-types/dist/lib.esm/base/BNUtils.js", "../../@tkey/common-types/dist/lib.esm/base/PublicPolynomial.js", "../../@tkey/common-types/dist/lib.esm/base/Share.js", "../../@tkey/common-types/dist/lib.esm/base/PublicShare.js", "../../@tkey/common-types/dist/lib.esm/base/ShareStore.js", "../../@tkey/common-types/dist/lib.esm/base/Error.js", "../../@tkey/common-types/dist/lib.esm/base/OneKey.js"],
  "sourcesContent": ["// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n    window.location.hostname === \"localhost\" ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === \"[::1]\" ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  ); };\n\nvar waitWindowLoad;\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== \"undefined\") {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof document !== \"undefined\" && (document.readyState === \"interactive\" || document.readyState === \"complete\")) {\n    waitWindowLoad = Promise.resolve();\n  } else if (typeof Promise !== \"undefined\") {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener(\"load\", resolve); });\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener(\"load\", cb); } };\n  }\n}\n\nexports.register = function register(swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions;\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args);\n    }\n  };\n\n  if (\"serviceWorker\" in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions);\n        navigator.serviceWorker.ready\n          .then(function (registration) {\n            emit(\"ready\", registration);\n          })\n          .catch(function (error) { return handleError(emit, error); });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions);\n        navigator.serviceWorker.ready\n          .then(function (registration) {\n            emit(\"ready\", registration);\n          })\n          .catch(function (error) { return handleError(emit, error); });\n      }\n    });\n  }\n};\n\nfunction handleError(emit, error) {\n  if (!navigator.onLine) {\n    emit(\"offline\");\n  }\n  emit(\"error\", error);\n}\n\nfunction registerValidSW(swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit(\"registered\", registration);\n      if (registration.waiting) {\n        emit(\"updated\", registration);\n        return;\n      }\n      registration.onupdatefound = function () {\n        emit(\"updatefound\", registration);\n        var installingWorker = registration.installing;\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit(\"updated\", registration);\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit(\"cached\", registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(function (error) { return handleError(emit, error); });\n}\n\nfunction checkValidServiceWorker(swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit(\"error\", new Error((\"Service worker not found at \" + swUrl)));\n        unregister();\n      } else if (response.headers.get(\"content-type\").indexOf(\"javascript\") === -1) {\n        emit(\"error\", new Error(\"Expected \" + swUrl + \" to have javascript content-type, \" + \"but received \" + (response.headers.get(\"content-type\"))));\n        unregister();\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions);\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); });\n}\n\nexports.unregister = function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(function (registration) {\n        registration.unregister();\n      })\n      .catch(function (error) { return handleError(emit, error); });\n  }\n};\n", "// @flow\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nlet KeyType = /*#__PURE__*/function (KeyType) {\n  KeyType[\"secp256k1\"] = \"secp256k1\";\n  KeyType[\"ed25519\"] = \"ed25519\";\n  return KeyType;\n}({});\n\nexport { KeyType };\n", "const LOGIN = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  GITHUB: \"github\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  LINE: \"line\",\n  EMAIL_PASSWORD: \"email_password\",\n  PASSWORDLESS: \"passwordless\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  JWT: \"jwt\",\n  PASSKEYS: \"passkeys\"\n};\nconst AGGREGATE_VERIFIER = {\n  SINGLE_VERIFIER_ID: \"single_id_verifier\"\n  // AND_AGGREGATE_VERIFIER : \"and_aggregate_verifier\",\n  // OR_AGGREGATE_VERIFIER : \"or_aggregate_verifier\",\n};\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst REDIRECT_PARAMS_STORAGE_METHOD = {\n  LOCAL_STORAGE: \"localStorage\",\n  SESSION_STORAGE: \"sessionStorage\",\n  SERVER: \"server\"\n};\nconst TORUS_METHOD = {\n  TRIGGER_LOGIN: \"triggerLogin\",\n  TRIGGER_AGGREGATE_LOGIN: \"triggerAggregateLogin\"\n};\nconst SENTRY_TXNS = {\n  FETCH_NODE_DETAILS: \"fetchNodeDetails\",\n  PUB_ADDRESS_LOOKUP: \"pubAddressLookup\",\n  FETCH_SHARES: \"fetchShares\"\n};\n\nexport { AGGREGATE_VERIFIER, LOGIN, REDIRECT_PARAMS_STORAGE_METHOD, SENTRY_TXNS, TORUS_METHOD, UX_MODE };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass DiscordHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token\");\n    _defineProperty(this, \"SCOPE\", \"identify email\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const finalUrl = new URL(\"https://discord.com/api/oauth2/authorize\");\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams || {}));\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      response_type: this.RESPONSE_TYPE,\n      client_id: this.params.clientId,\n      redirect_uri: this.params.redirect_uri,\n      scope: this.SCOPE\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      accessToken\n    } = params;\n    const userInfo = await get(\"https://discord.com/api/users/@me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    const {\n      id,\n      avatar,\n      email = \"\",\n      username: name = \"\",\n      discriminator = \"\"\n    } = userInfo;\n    const profileImage = avatar === null ? `https://cdn.discordapp.com/embed/avatars/${Number(discriminator) % 5}.png` : `https://cdn.discordapp.com/avatars/${id}/${avatar}.png?size=2048`;\n    return {\n      profileImage,\n      name: `${name}#${discriminator}`,\n      email,\n      verifierId: id,\n      verifier: this.params.verifier,\n      typeOfLogin: this.params.typeOfLogin\n    };\n  }\n}\n\nexport { DiscordHandler as default };\n", "function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };", "import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64url from 'base64url';\nimport { UX_MODE } from '../utils/enums.js';\nimport { randomId, getTimeout, broadcastChannelOptions } from '../utils/helpers.js';\nimport log from '../utils/loglevel.js';\nimport PopupHandler from '../utils/PopupHandler.js';\n\nconst _excluded = [\"access_token\", \"id_token\"];\nclass AbstractLoginHandler {\n  // Not using object constructor because of this issue\n  // https://github.com/microsoft/TypeScript/issues/5326\n  constructor(params) {\n    _defineProperty(this, \"nonce\", randomId());\n    _defineProperty(this, \"finalURL\", void 0);\n    _defineProperty(this, \"params\", void 0);\n    this.params = params;\n  }\n  get state() {\n    return encodeURIComponent(base64url.encode(JSON.stringify(_objectSpread(_objectSpread({}, this.params.customState || {}), {}, {\n      instanceId: this.nonce,\n      verifier: this.params.verifier,\n      typeOfLogin: this.params.typeOfLogin,\n      redirectToOpener: this.params.redirectToOpener || false\n    }))));\n  }\n  async handleLoginWindow(params) {\n    const verifierWindow = new PopupHandler({\n      url: this.finalURL,\n      features: params.popupFeatures,\n      timeout: getTimeout(this.params.typeOfLogin)\n    });\n    if (this.params.uxMode === UX_MODE.REDIRECT) {\n      verifierWindow.redirect(params.locationReplaceOnRedirect);\n    } else {\n      const {\n        BroadcastChannel\n      } = await import('@toruslabs/broadcast-channel');\n      return new Promise((resolve, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let bc;\n        const handleData = async ev => {\n          try {\n            const {\n              error,\n              data\n            } = ev;\n            const _ref = data || {},\n              {\n                instanceParams,\n                hashParams: {\n                  access_token: accessToken,\n                  id_token: idToken\n                }\n              } = _ref,\n              rest = _objectWithoutProperties(_ref.hashParams, _excluded);\n            if (error) {\n              log.error(ev);\n              reject(new Error(`Error: ${error}. Info: ${JSON.stringify(ev.data || {})}`));\n              return;\n            }\n            if (ev.data && instanceParams.verifier === this.params.verifier) {\n              log.info(ev.data);\n              if (!this.params.redirectToOpener && bc) await bc.postMessage({\n                success: true\n              });\n              resolve(_objectSpread(_objectSpread({\n                accessToken,\n                idToken: idToken || \"\"\n              }, rest), {}, {\n                // State has to be last here otherwise it will be overwritten\n                state: instanceParams\n              }));\n            }\n          } catch (error) {\n            log.error(error);\n            reject(error);\n          }\n        };\n        if (!this.params.redirectToOpener) {\n          bc = new BroadcastChannel(`redirect_channel_${this.nonce}`, broadcastChannelOptions);\n          bc.addEventListener(\"message\", async ev => {\n            await handleData(ev);\n            bc.close();\n            verifierWindow.close();\n          });\n        } else {\n          const postMessageEventHandler = async postMessageEvent => {\n            if (!postMessageEvent.data) return;\n            const ev = postMessageEvent.data;\n            if (ev.channel !== `redirect_channel_${this.nonce}`) return;\n            window.removeEventListener(\"message\", postMessageEventHandler);\n            handleData(ev);\n            verifierWindow.close();\n          };\n          window.addEventListener(\"message\", postMessageEventHandler);\n        }\n        try {\n          verifierWindow.open();\n        } catch (error) {\n          log.error(error);\n          reject(error);\n          return;\n        }\n        verifierWindow.once(\"close\", () => {\n          if (bc) bc.close();\n          reject(new Error(\"user closed popup\"));\n        });\n      });\n    }\n    return null;\n  }\n}\n\nexport { AbstractLoginHandler as default };\n", "import base64url from 'base64url';\nimport Bowser from 'bowser';\nimport { LOGIN } from './enums.js';\nimport log from './loglevel.js';\n\nfunction eventToPromise(emitter) {\n  return new Promise((resolve, reject) => {\n    const handler = ev => {\n      const {\n        error = \"\",\n        data\n      } = ev;\n      emitter.removeEventListener(\"message\", handler);\n      if (error) return reject(new Error(error));\n      return resolve(data);\n    };\n    emitter.addEventListener(\"message\", handler);\n  });\n}\n\n// These are the default connection names used by auth0\nconst loginToConnectionMap = {\n  [LOGIN.APPLE]: \"apple\",\n  [LOGIN.GITHUB]: \"github\",\n  [LOGIN.LINKEDIN]: \"linkedin\",\n  [LOGIN.TWITTER]: \"twitter\",\n  [LOGIN.WEIBO]: \"weibo\",\n  [LOGIN.LINE]: \"line\",\n  [LOGIN.EMAIL_PASSWORD]: \"Username-Password-Authentication\",\n  [LOGIN.PASSWORDLESS]: \"email\",\n  [LOGIN.EMAIL_PASSWORDLESS]: \"email\",\n  [LOGIN.SMS_PASSWORDLESS]: \"sms\"\n};\nconst padUrlString = url => url.href.endsWith(\"/\") ? url.href : `${url.href}/`;\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nconst randomId = () => Math.random().toString(36).slice(2);\nconst broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\nfunction caseSensitiveField(field, isCaseSensitive) {\n  return isCaseSensitive ? field : field.toLowerCase();\n}\nconst getVerifierId = (userInfo, typeOfLogin, verifierIdField, isVerifierIdCaseSensitive = true) => {\n  const {\n    name,\n    sub\n  } = userInfo;\n  if (verifierIdField) return caseSensitiveField(userInfo[verifierIdField], isVerifierIdCaseSensitive);\n  switch (typeOfLogin) {\n    case LOGIN.PASSWORDLESS:\n    case LOGIN.EMAIL_PASSWORD:\n    case LOGIN.EMAIL_PASSWORDLESS:\n    case LOGIN.SMS_PASSWORDLESS:\n      return caseSensitiveField(name, isVerifierIdCaseSensitive);\n    case LOGIN.WEIBO:\n    case LOGIN.GITHUB:\n    case LOGIN.TWITTER:\n    case LOGIN.APPLE:\n    case LOGIN.LINKEDIN:\n    case LOGIN.LINE:\n    case LOGIN.JWT:\n      return caseSensitiveField(sub, isVerifierIdCaseSensitive);\n    default:\n      throw new Error(\"Invalid login type to get verifier id\");\n  }\n};\nconst handleRedirectParameters = (hash, queryParameters) => {\n  const hashParameters = hash.split(\"&\").reduce((result, item) => {\n    const [part0, part1] = item.split(\"=\");\n    result[part0] = part1;\n    return result;\n  }, {});\n  log.info(hashParameters, queryParameters);\n  let instanceParameters = {};\n  let error = \"\";\n  if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n    instanceParameters = JSON.parse(base64url.decode(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n    error = hashParameters.error_description || hashParameters.error || error;\n  } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n    instanceParameters = JSON.parse(base64url.decode(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n    if (queryParameters.error) error = queryParameters.error;\n  }\n  return {\n    error,\n    instanceParameters,\n    hashParameters\n  };\n};\nfunction storageAvailable(type) {\n  let storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    const e = error;\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" ||\n    // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\nconst isFirefox = () => {\n  var _window;\n  return ((_window = window) === null || _window === void 0 || (_window = _window.navigator) === null || _window === void 0 ? void 0 : _window.userAgent.toLowerCase().indexOf(\"firefox\")) > -1 || false;\n};\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\nfunction are3PCSupported() {\n  var _navigator;\n  const browserInfo = Bowser.parse(navigator.userAgent);\n  log.info(JSON.stringify(browserInfo), \"current browser info\");\n  let thirdPartyCookieSupport = true;\n  // brave\n  if ((_navigator = navigator) !== null && _navigator !== void 0 && _navigator.brave) {\n    thirdPartyCookieSupport = false;\n  }\n  // All webkit & gecko engine instances use itp (intelligent tracking prevention -\n  // https://webkit.org/tracking-prevention/#intelligent-tracking-prevention-itp)\n  if (browserInfo.engine.name === Bowser.ENGINE_MAP.WebKit || browserInfo.engine.name === Bowser.ENGINE_MAP.Gecko) {\n    thirdPartyCookieSupport = false;\n  }\n  return thirdPartyCookieSupport;\n}\nconst validateAndConstructUrl = domain => {\n  try {\n    const url = new URL(decodeURIComponent(domain));\n    return url;\n  } catch (error) {\n    throw new Error(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}, Note: Your jwt domain: (i.e ${domain}) must have http:// or https:// prefix`);\n  }\n};\nfunction isMobileOrTablet() {\n  const browser = Bowser.getParser(navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === Bowser.PLATFORMS_MAP.tablet || platform.type === Bowser.PLATFORMS_MAP.mobile;\n}\nfunction getTimeout(typeOfLogin) {\n  if ((typeOfLogin === LOGIN.FACEBOOK || typeOfLogin === LOGIN.LINE) && isMobileOrTablet()) {\n    return 1000 * 60; // 60 seconds to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\nfunction decodeToken(token) {\n  const [header, payload] = token.split(\".\");\n  return {\n    header: JSON.parse(base64url.decode(header)),\n    payload: JSON.parse(base64url.decode(payload))\n  };\n}\n\nexport { are3PCSupported, broadcastChannelOptions, constructURL, decodeToken, eventToPromise, getPopupFeatures, getTimeout, getVerifierId, handleRedirectParameters, isFirefox, isMobileOrTablet, loginToConnectionMap, padUrlString, randomId, storageAvailable, validateAndConstructUrl };\n", "import log$1 from 'loglevel';\n\nvar log = log$1.getLogger(\"customauth\");\n\nexport { log as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { EventEmitter } from 'events';\nimport { getPopupFeatures } from './helpers.js';\n\nclass PopupHandler extends EventEmitter {\n  constructor({\n    url,\n    target,\n    features,\n    timeout = 30000\n  }) {\n    // eslint-disable-next-line constructor-super\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    _defineProperty(this, \"timeout\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        setTimeout(() => {\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }, this.timeout);\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (!this.window) throw new Error(\"popup window is blocked\");\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport { PopupHandler as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass FacebookHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token\");\n    _defineProperty(this, \"SCOPE\", \"public_profile email\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const finalUrl = new URL(\"https://www.facebook.com/v20.0/dialog/oauth\");\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams || {}));\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      response_type: this.RESPONSE_TYPE,\n      client_id: this.params.clientId,\n      redirect_uri: this.params.redirect_uri,\n      scope: this.SCOPE\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      accessToken\n    } = params;\n    const userInfo = await get(\"https://graph.facebook.com/me?fields=name,email,picture.type(large)\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    const {\n      name = \"\",\n      id,\n      picture,\n      email = \"\"\n    } = userInfo;\n    return {\n      email,\n      name,\n      profileImage: picture.data.url || \"\",\n      verifier: this.params.verifier,\n      verifierId: id,\n      typeOfLogin: this.params.typeOfLogin\n    };\n  }\n}\n\nexport { FacebookHandler as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass GoogleHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token id_token\");\n    _defineProperty(this, \"SCOPE\", \"profile email openid\");\n    _defineProperty(this, \"PROMPT\", \"select_account\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const finalUrl = new URL(\"https://accounts.google.com/o/oauth2/v2/auth\");\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams || {}));\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      response_type: this.RESPONSE_TYPE,\n      client_id: this.params.clientId,\n      prompt: this.PROMPT,\n      redirect_uri: this.params.redirect_uri,\n      scope: this.SCOPE,\n      nonce: this.nonce\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      accessToken\n    } = params;\n    const userInfo = await get(\"https://www.googleapis.com/userinfo/v2/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    const {\n      picture: profileImage = \"\",\n      email = \"\",\n      name = \"\"\n    } = userInfo;\n    return {\n      email,\n      name,\n      profileImage,\n      verifier: this.params.verifier,\n      verifierId: email.toLowerCase(),\n      typeOfLogin: this.params.typeOfLogin\n    };\n  }\n}\n\nexport { GoogleHandler as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport log from 'loglevel';\nimport { validateAndConstructUrl, loginToConnectionMap, padUrlString, getVerifierId, decodeToken } from '../utils/helpers.js';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass JwtHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"SCOPE\", \"openid profile email\");\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token id_token\");\n    _defineProperty(this, \"PROMPT\", \"login\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const {\n      domain\n    } = this.params.jwtParams;\n    const finalUrl = validateAndConstructUrl(domain);\n    finalUrl.pathname += finalUrl.pathname.endsWith(\"/\") ? \"authorize\" : \"/authorize\";\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams));\n    delete clonedParams.domain;\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      response_type: this.RESPONSE_TYPE,\n      client_id: this.params.clientId,\n      prompt: this.PROMPT,\n      redirect_uri: this.params.redirect_uri,\n      scope: this.SCOPE,\n      connection: loginToConnectionMap[this.params.typeOfLogin],\n      nonce: this.nonce\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      idToken,\n      accessToken\n    } = params;\n    const {\n      domain,\n      verifierIdField,\n      isVerifierIdCaseSensitive,\n      user_info_route = \"userinfo\"\n    } = this.params.jwtParams;\n    if (accessToken) {\n      try {\n        const domainUrl = new URL(domain);\n        const userInfo = await get(`${padUrlString(domainUrl)}${user_info_route}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        const {\n          picture,\n          name,\n          email\n        } = userInfo;\n        return {\n          email,\n          name,\n          profileImage: picture,\n          verifierId: getVerifierId(userInfo, this.params.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n          verifier: this.params.verifier,\n          typeOfLogin: this.params.typeOfLogin\n        };\n      } catch (error) {\n        // ignore\n        log.warn(error, \"Unable to get userinfo from endpoint\");\n      }\n    }\n    if (idToken) {\n      const decodedToken = decodeToken(idToken).payload;\n      const {\n        name,\n        email,\n        picture\n      } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.params.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.params.verifier,\n        typeOfLogin: this.params.typeOfLogin\n      };\n    }\n    throw new Error(\"Access/id token not available\");\n  }\n}\n\nexport { JwtHandler as default };\n", "import { get } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport log from 'loglevel';\nimport { UX_MODE } from '../utils/enums.js';\nimport { constructURL, padUrlString, getVerifierId, decodeToken } from '../utils/helpers.js';\nimport PopupHandler from '../utils/PopupHandler.js';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass MockLoginHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams));\n    delete clonedParams.domain;\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      client_id: this.params.clientId,\n      nonce: this.nonce\n    }, clonedParams);\n    this.finalURL = new URL(constructURL({\n      baseURL: this.params.redirect_uri,\n      query: null,\n      hash: finalJwtParams\n    }));\n  }\n  async getUserInfo(params) {\n    const {\n      idToken,\n      accessToken\n    } = params;\n    const {\n      domain,\n      verifierIdField,\n      isVerifierIdCaseSensitive,\n      user_info_route = \"userinfo\"\n    } = this.params.jwtParams;\n    if (accessToken) {\n      try {\n        const domainUrl = new URL(domain);\n        const userInfo = await get(`${padUrlString(domainUrl)}${user_info_route}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        const {\n          picture,\n          name,\n          email\n        } = userInfo;\n        return {\n          email,\n          name,\n          profileImage: picture,\n          verifierId: getVerifierId(userInfo, this.params.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n          verifier: this.params.verifier,\n          typeOfLogin: this.params.typeOfLogin\n        };\n      } catch (error) {\n        // ignore\n        log.warn(error, \"Unable to get userinfo from endpoint\");\n      }\n    }\n    if (idToken) {\n      const decodedToken = decodeToken(idToken).payload;\n      const {\n        name,\n        email,\n        picture\n      } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.params.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.params.verifier,\n        typeOfLogin: this.params.typeOfLogin\n      };\n    }\n    throw new Error(\"Access/id token not available\");\n  }\n  handleLoginWindow(params) {\n    const {\n      id_token: idToken,\n      access_token: accessToken\n    } = this.params.jwtParams;\n    const verifierWindow = new PopupHandler({\n      url: this.finalURL,\n      features: params.popupFeatures\n    });\n    if (this.params.uxMode === UX_MODE.REDIRECT) {\n      verifierWindow.redirect(params.locationReplaceOnRedirect);\n    } else {\n      return Promise.resolve({\n        state: {},\n        idToken,\n        accessToken\n      });\n    }\n    return null;\n  }\n}\n\nexport { MockLoginHandler as default };\n", "import base64url from 'base64url';\nimport deepmerge from 'deepmerge';\nimport { fetchDataFromBroadcastServer } from '../utils/sessionHelper.js';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass PasskeysHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const {\n      passkeysHostUrl\n    } = this.params.customState || {};\n    if (!passkeysHostUrl) throw new Error(\"Invalid passkeys url.\");\n    const finalUrl = new URL(passkeysHostUrl);\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams || {}));\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      client_id: this.params.clientId,\n      redirect_uri: this.params.redirect_uri\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(parameters, storageServerUrl) {\n    const {\n      idToken,\n      extraParams\n    } = parameters;\n    const {\n      sessionId\n    } = JSON.parse(base64url.decode(extraParams)) || {};\n    if (!sessionId) {\n      throw new Error(\"sessionId not found\");\n    }\n    const {\n      verifier_id: verifierId,\n      signature,\n      clientDataJSON,\n      authenticatorData,\n      publicKey,\n      challenge,\n      rpOrigin,\n      rpId,\n      credId,\n      transports,\n      username\n    } = await fetchDataFromBroadcastServer(sessionId, storageServerUrl);\n    if (signature !== idToken) {\n      throw new Error(\"idtoken should be equal to signature\");\n    }\n    return {\n      email: \"\",\n      name: \"Passkeys Login\",\n      profileImage: \"\",\n      verifier: this.params.verifier,\n      verifierId,\n      typeOfLogin: this.params.typeOfLogin,\n      extraVerifierParams: {\n        signature,\n        clientDataJSON,\n        authenticatorData,\n        publicKey,\n        challenge,\n        rpOrigin,\n        rpId,\n        credId,\n        transports,\n        username\n      }\n    };\n  }\n}\n\nexport { PasskeysHandler as default };\n", "import { SessionManager } from '@toruslabs/session-manager';\nimport log from 'loglevel';\n\nasync function fetchDataFromBroadcastServer(identifier, storageServerUrl) {\n  try {\n    const configManager = new SessionManager({\n      sessionId: identifier,\n      sessionServerBaseUrl: storageServerUrl,\n      allowedOrigin: true\n    });\n    const data = await configManager.authorizeSession();\n    return data;\n  } catch (error) {\n    log.error(\"fetch data from storage server error\", error);\n    throw new Error(\"Unable to retrieve data from storage server, invalid key or key expired.\");\n  }\n}\n\nexport { fetchDataFromBroadcastServer };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get, post } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport { validateAndConstructUrl, padUrlString, getVerifierId, decodeToken, broadcastChannelOptions } from '../utils/helpers.js';\nimport log from '../utils/loglevel.js';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nconst _excluded = [\"access_token\", \"id_token\"];\nclass PasswordlessHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"SCOPE\", \"openid profile email\");\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token id_token\");\n    _defineProperty(this, \"PROMPT\", \"login\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const {\n      domain\n    } = this.params.jwtParams;\n    const domainUrl = validateAndConstructUrl(domain);\n    domainUrl.pathname = \"/passwordless/start\";\n    this.finalURL = domainUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      idToken,\n      accessToken\n    } = params;\n    const {\n      domain,\n      verifierIdField,\n      isVerifierIdCaseSensitive\n    } = this.params.jwtParams;\n    try {\n      const domainUrl = new URL(domain);\n      const userInfo = await get(`${padUrlString(domainUrl)}userinfo`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const {\n        picture,\n        name,\n        email\n      } = userInfo;\n      return {\n        email,\n        name,\n        profileImage: picture,\n        verifierId: getVerifierId(userInfo, this.params.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.params.verifier,\n        typeOfLogin: this.params.typeOfLogin\n      };\n    } catch (error) {\n      log.error(error);\n      const decodedToken = decodeToken(idToken).payload;\n      const {\n        name,\n        email,\n        picture\n      } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.params.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.params.verifier,\n        typeOfLogin: this.params.typeOfLogin\n      };\n    }\n  }\n  async handleLoginWindow() {\n    const {\n      BroadcastChannel\n    } = await import('@toruslabs/broadcast-channel');\n    return new Promise((resolve, reject) => {\n      if (this.params.redirectToOpener) {\n        reject(new Error(\"Cannot use redirect to opener for passwordless\"));\n        return;\n      }\n      const handleData = ev => {\n        try {\n          const {\n            error,\n            data\n          } = ev;\n          const _ref = data || {},\n            {\n              instanceParams,\n              hashParams: {\n                access_token: accessToken,\n                id_token: idToken\n              }\n            } = _ref,\n            rest = _objectWithoutProperties(_ref.hashParams, _excluded);\n          if (error) {\n            log.error(ev.error);\n            reject(new Error(error));\n            return;\n          }\n          if (ev.data && instanceParams.verifier === this.params.verifier) {\n            log.info(ev.data);\n            resolve(_objectSpread(_objectSpread({\n              accessToken,\n              idToken: idToken || \"\"\n            }, rest), {}, {\n              state: instanceParams\n            }));\n          }\n        } catch (error) {\n          log.error(error);\n          reject(error);\n        }\n      };\n      const bc = new BroadcastChannel(`redirect_channel_${this.nonce}`, broadcastChannelOptions);\n      bc.addEventListener(\"message\", async ev => {\n        handleData(ev);\n        bc.close();\n      });\n      try {\n        const {\n          connection = \"email\",\n          login_hint\n        } = this.params.jwtParams;\n        const finalJwtParams = deepmerge({\n          client_id: this.params.clientId,\n          connection,\n          email: connection === \"email\" ? login_hint : undefined,\n          phone_number: connection === \"sms\" ? login_hint : undefined,\n          send: \"link\",\n          authParams: {\n            scope: this.SCOPE,\n            state: this.state,\n            response_type: this.RESPONSE_TYPE,\n            redirect_uri: this.params.redirect_uri,\n            nonce: this.nonce,\n            prompt: this.PROMPT\n          }\n        }, {\n          authParams: this.params.jwtParams\n        });\n        // using stringify and parse to remove undefined params\n        // This method is only resolved when the user clicks the email link\n        post(this.finalURL.href, JSON.parse(JSON.stringify(finalJwtParams))).then(response => {\n          log.info(\"posted\", response);\n          return undefined;\n        }).catch(error => {\n          log.error(error);\n          reject(error);\n        });\n      } catch (error) {\n        log.error(error);\n        reject(error);\n      }\n    });\n  }\n}\n\nexport { PasswordlessHandler as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get } from '@toruslabs/http-helpers';\nimport deepmerge from 'deepmerge';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\n\nclass TwitchHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token\");\n    _defineProperty(this, \"SCOPE\", \"user:read:email\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const finalUrl = new URL(\"https://id.twitch.tv/oauth2/authorize\");\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams || {}));\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      response_type: this.RESPONSE_TYPE,\n      client_id: this.params.clientId,\n      redirect_uri: this.params.redirect_uri,\n      scope: this.SCOPE,\n      force_verify: \"true\"\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      accessToken\n    } = params;\n    const userInfo = await get(\"https://api.twitch.tv/helix/users\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": this.params.clientId\n      }\n    });\n    const [{\n      profile_image_url: profileImage = \"\",\n      display_name: name = \"\",\n      email = \"\",\n      id: verifierId\n    }] = userInfo.data || [];\n    return {\n      profileImage,\n      name,\n      email,\n      verifierId,\n      verifier: this.params.verifier,\n      typeOfLogin: this.params.typeOfLogin\n    };\n  }\n}\n\nexport { TwitchHandler as default };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport deepmerge from 'deepmerge';\nimport { validateAndConstructUrl, loginToConnectionMap, decodeToken } from '../utils/helpers.js';\nimport AbstractLoginHandler from './AbstractLoginHandler.js';\nimport { EMAIL_FLOW } from './interfaces.js';\n\nclass Web3AuthPasswordlessHandler extends AbstractLoginHandler {\n  constructor(params) {\n    super(params);\n    _defineProperty(this, \"SCOPE\", \"openid profile email\");\n    _defineProperty(this, \"RESPONSE_TYPE\", \"token id_token\");\n    _defineProperty(this, \"PROMPT\", \"login\");\n    this.setFinalUrl();\n  }\n  setFinalUrl() {\n    const {\n      domain\n    } = this.params.jwtParams || {};\n    const finalUrl = validateAndConstructUrl(domain || \"https://passwordless.web3auth.io/v6\");\n    finalUrl.pathname += finalUrl.pathname.endsWith(\"/\") ? \"authorize\" : \"/authorize\";\n    const clonedParams = JSON.parse(JSON.stringify(this.params.jwtParams || {}));\n    delete clonedParams.domain;\n    this.params.customState = _objectSpread(_objectSpread({}, this.params.customState || {}), {}, {\n      client: this.params.web3AuthClientId\n    });\n    const finalJwtParams = deepmerge({\n      state: this.state,\n      client_id: this.params.clientId || this.params.web3AuthClientId,\n      redirect_uri: this.params.redirect_uri,\n      nonce: this.nonce,\n      network: this.params.web3AuthNetwork,\n      connection: loginToConnectionMap[this.params.typeOfLogin],\n      scope: this.SCOPE,\n      response_type: this.RESPONSE_TYPE,\n      prompt: this.PROMPT,\n      flow_type: (clonedParams === null || clonedParams === void 0 ? void 0 : clonedParams.flow_type) || EMAIL_FLOW.code\n    }, clonedParams);\n    Object.keys(finalJwtParams).forEach(key => {\n      const localKey = key;\n      if (finalJwtParams[localKey]) finalUrl.searchParams.append(localKey, finalJwtParams[localKey]);\n    });\n    this.finalURL = finalUrl;\n  }\n  async getUserInfo(params) {\n    const {\n      idToken\n    } = params;\n    const decodedToken = decodeToken(idToken).payload;\n    const {\n      name,\n      email,\n      picture\n    } = decodedToken;\n    return {\n      profileImage: picture,\n      name,\n      email,\n      verifierId: name.toLowerCase(),\n      verifier: this.params.verifier,\n      typeOfLogin: this.params.typeOfLogin\n    };\n  }\n}\n\nexport { Web3AuthPasswordlessHandler as default };\n", "// REGION: AUTH0 PARAMS\n\nconst EMAIL_FLOW = {\n  link: \"link\",\n  code: \"code\"\n};\n\nexport { EMAIL_FLOW };\n", "import { LOGIN } from '../utils/enums.js';\nimport DiscordHandler from './DiscordHandler.js';\nimport FacebookHandler from './FacebookHandler.js';\nimport GoogleHandler from './GoogleHandler.js';\nimport JwtHandler from './JwtHandler.js';\nimport MockLoginHandler from './MockLoginHandler.js';\nimport PasskeysHandler from './PasskeysHandler.js';\nimport PasswordlessHandler from './PasswordlessHandler.js';\nimport TwitchHandler from './TwitchHandler.js';\nimport Web3AuthPasswordlessHandler from './Web3AuthPasswordlessHandler.js';\n\nconst createHandler = params => {\n  const {\n    verifier,\n    typeOfLogin,\n    clientId,\n    jwtParams\n  } = params;\n  if (!verifier || !typeOfLogin || !clientId) {\n    throw new Error(\"Invalid params. Missing verifier, typeOfLogin or clientId\");\n  }\n  const {\n    domain,\n    login_hint,\n    id_token,\n    access_token\n  } = jwtParams || {};\n  switch (typeOfLogin) {\n    case LOGIN.GOOGLE:\n      return new GoogleHandler(params);\n    case LOGIN.FACEBOOK:\n      return new FacebookHandler(params);\n    case LOGIN.TWITCH:\n      return new TwitchHandler(params);\n    case LOGIN.DISCORD:\n      return new DiscordHandler(params);\n    case LOGIN.EMAIL_PASSWORDLESS:\n    case LOGIN.SMS_PASSWORDLESS:\n      if (!login_hint) throw new Error(\"Invalid params. Missing login_hint for web3auth passwordless login\");\n      return new Web3AuthPasswordlessHandler(params);\n    case LOGIN.PASSWORDLESS:\n      if (!domain || !login_hint) throw new Error(\"Invalid params. Missing domain or login_hint for passwordless login\");\n      return new PasswordlessHandler(params);\n    case LOGIN.APPLE:\n    case LOGIN.GITHUB:\n    case LOGIN.LINKEDIN:\n    case LOGIN.TWITTER:\n    case LOGIN.WEIBO:\n    case LOGIN.LINE:\n    case LOGIN.EMAIL_PASSWORD:\n    case LOGIN.JWT:\n    case LOGIN.REDDIT:\n      if (id_token || access_token) {\n        return new MockLoginHandler(params);\n      }\n      if (!domain) throw new Error(\"Invalid params for jwt login. Missing domain\");\n      return new JwtHandler(params);\n    case LOGIN.PASSKEYS:\n      return new PasskeysHandler(params);\n    default:\n      throw new Error(\"Unsupported login type\");\n  }\n};\nvar createHandler$1 = createHandler;\n\nexport { createHandler$1 as default };\n", "const TORUS_LEGACY_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  AQUA: \"aqua\",\n  CELESTE: \"celeste\"\n};\nconst TORUS_SAPPHIRE_NETWORK = {\n  SAPPHIRE_DEVNET: \"sapphire_devnet\",\n  SAPPHIRE_MAINNET: \"sapphire_mainnet\"\n};\nconst PROXY_CONTRACT_ADDRESS = {\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"0xf20336e16B5182637f09821c27BDe29b0AFcfe80\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"0xd084604e5FA387FbC2Da8bAab07fDD6aDED4614A\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"0x9f072ba19b3370e512aa1b4bfcdaf97283168005\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"0x29Dea82a0509153b91040ee13cDBba0f03efb625\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"0x6Bffb4e89453069E7487f0fa5c9f4a2D771cce6c\"\n};\nconst MULTI_CLUSTER_NETWORKS = [\n  // TORUS_LEGACY_NETWORK.AQUA,\n  // TORUS_LEGACY_NETWORK.CELESTE,\n  // TORUS_LEGACY_NETWORK.CYAN,\n];\nconst LEGACY_NETWORKS_ROUTE_MAP = {\n  [TORUS_LEGACY_NETWORK.AQUA]: {\n    migrationCompleted: true,\n    networkIdentifier: \"aqua\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.CELESTE]: {\n    migrationCompleted: true,\n    networkIdentifier: \"celeste\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.CYAN]: {\n    migrationCompleted: true,\n    networkIdentifier: \"cyan\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.MAINNET]: {\n    migrationCompleted: true,\n    networkIdentifier: \"mainnet\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.TESTNET]: {\n    migrationCompleted: true,\n    networkIdentifier: \"teal\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET\n  }\n};\nconst NETWORK_MAP = {\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"mainnet\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"goerli\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"polygon-mainnet\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"polygon-mainnet\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"polygon-mainnet\"\n};\nconst SIGNER_MAP = {\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET]: \"https://signer.web3auth.io\",\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET]: \"https://signer.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"https://signer.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"https://signer.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"https://signer-polygon.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"https://signer-polygon.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"https://signer-polygon.web3auth.io\"\n};\nconst METADATA_MAP = {\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"https://metadata.web3auth.io\"\n};\nconst FND_SERVER = \"https://fnd.web3auth.io\";\nconst SESSION_SERVER = \"https://session.web3auth.io\";\nconst KEY_TYPE = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\n\nexport { FND_SERVER, KEY_TYPE, LEGACY_NETWORKS_ROUTE_MAP, METADATA_MAP, MULTI_CLUSTER_NETWORKS, NETWORK_MAP, PROXY_CONTRACT_ADDRESS, SESSION_SERVER, SIGNER_MAP, TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK };\n", "const TORUS_LEGACY_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  AQUA: \"aqua\",\n  CELESTE: \"celeste\"\n};\nconst TORUS_SAPPHIRE_NETWORK = {\n  SAPPHIRE_DEVNET: \"sapphire_devnet\",\n  SAPPHIRE_MAINNET: \"sapphire_mainnet\"\n};\nconst PROXY_CONTRACT_ADDRESS = {\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"0xf20336e16B5182637f09821c27BDe29b0AFcfe80\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"0xd084604e5FA387FbC2Da8bAab07fDD6aDED4614A\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"0x9f072ba19b3370e512aa1b4bfcdaf97283168005\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"0x29Dea82a0509153b91040ee13cDBba0f03efb625\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"0x6Bffb4e89453069E7487f0fa5c9f4a2D771cce6c\"\n};\nconst MULTI_CLUSTER_NETWORKS = [\n  // TORUS_LEGACY_NETWORK.AQUA,\n  // TORUS_LEGACY_NETWORK.CELESTE,\n  // TORUS_LEGACY_NETWORK.CYAN,\n];\nconst LEGACY_NETWORKS_ROUTE_MAP = {\n  [TORUS_LEGACY_NETWORK.AQUA]: {\n    migrationCompleted: true,\n    networkIdentifier: \"aqua\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.CELESTE]: {\n    migrationCompleted: true,\n    networkIdentifier: \"celeste\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.CYAN]: {\n    migrationCompleted: true,\n    networkIdentifier: \"cyan\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.MAINNET]: {\n    migrationCompleted: true,\n    networkIdentifier: \"mainnet\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET\n  },\n  [TORUS_LEGACY_NETWORK.TESTNET]: {\n    migrationCompleted: true,\n    networkIdentifier: \"teal\",\n    networkMigratedTo: TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET\n  }\n};\nconst NETWORK_MAP = {\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"mainnet\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"goerli\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"polygon-mainnet\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"polygon-mainnet\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"polygon-mainnet\"\n};\nconst SIGNER_MAP = {\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET]: \"https://signer.web3auth.io\",\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET]: \"https://signer.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"https://signer.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"https://signer.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"https://signer-polygon.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"https://signer-polygon.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"https://signer-polygon.web3auth.io\"\n};\nconst METADATA_MAP = {\n  [TORUS_LEGACY_NETWORK.MAINNET]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.TESTNET]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CYAN]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.AQUA]: \"https://metadata.web3auth.io\",\n  [TORUS_LEGACY_NETWORK.CELESTE]: \"https://metadata.web3auth.io\"\n};\nconst FND_SERVER = \"https://fnd.web3auth.io\";\nconst SESSION_SERVER = \"https://session.web3auth.io\";\nconst KEY_TYPE = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\n\nexport { FND_SERVER, KEY_TYPE, LEGACY_NETWORKS_ROUTE_MAP, METADATA_MAP, MULTI_CLUSTER_NETWORKS, NETWORK_MAP, PROXY_CONTRACT_ADDRESS, SESSION_SERVER, SIGNER_MAP, TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK };\n", "import { TORUS_SAPPHIRE_NETWORK, LEGACY_NETWORKS_ROUTE_MAP, KEY_TYPE } from '@toruslabs/constants';\n\nconst SAPPHIRE_NETWORK_URLS = {\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET]: [\"https://node-1.dev-node.web3auth.io\", \"https://node-2.dev-node.web3auth.io\", \"https://node-3.dev-node.web3auth.io\", \"https://node-4.dev-node.web3auth.io\", \"https://node-5.dev-node.web3auth.io\"],\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET]: [\"https://node-1.node.web3auth.io\", \"https://node-2.node.web3auth.io\", \"https://node-3.node.web3auth.io\", \"https://node-4.node.web3auth.io\", \"https://node-5.node.web3auth.io\"]\n};\nconst getSSSEndpoints = (sapphireNetwork, legacyNetwork) => {\n  const endpoints = SAPPHIRE_NETWORK_URLS[sapphireNetwork];\n  if (!endpoints || endpoints.length === 0) {\n    throw new Error(`Unsupported network: ${sapphireNetwork}`);\n  }\n  const routeIdentifier = LEGACY_NETWORKS_ROUTE_MAP[legacyNetwork];\n  return endpoints.map(e => {\n    if (routeIdentifier && routeIdentifier.networkIdentifier) {\n      return `${e}/sss/${routeIdentifier.networkIdentifier}/jrpc`;\n    }\n    return `${e}/sss/jrpc`;\n  });\n};\nconst getRSSEndpoints = (sapphireNetwork, legacyNetwork) => {\n  const endpoints = SAPPHIRE_NETWORK_URLS[sapphireNetwork];\n  if (!endpoints || endpoints.length === 0) {\n    throw new Error(`Unsupported network: ${sapphireNetwork}`);\n  }\n  const routeIdentifier = LEGACY_NETWORKS_ROUTE_MAP[legacyNetwork];\n  return endpoints.map(e => {\n    if (routeIdentifier && routeIdentifier.networkIdentifier) {\n      return `${e}/rss/${routeIdentifier.networkIdentifier}`;\n    }\n    return `${e}/rss`;\n  });\n};\nconst getTSSEndpoints = (sapphireNetwork, legacyNetwork, keyType = KEY_TYPE.SECP256K1) => {\n  const endpoints = SAPPHIRE_NETWORK_URLS[sapphireNetwork];\n  if (!endpoints || endpoints.length === 0) {\n    throw new Error(`Unsupported network: ${sapphireNetwork}`);\n  }\n  const tssPath = keyType === KEY_TYPE.ED25519 ? \"tss-frost\" : \"tss\";\n  const routeIdentifier = LEGACY_NETWORKS_ROUTE_MAP[legacyNetwork];\n  return endpoints.map(e => {\n    if (routeIdentifier && routeIdentifier.networkIdentifier) {\n      return `${e}/${tssPath}/${routeIdentifier.networkIdentifier}`;\n    }\n    return `${e}/${tssPath}`;\n  });\n};\n\nexport { SAPPHIRE_NETWORK_URLS, getRSSEndpoints, getSSSEndpoints, getTSSEndpoints };\n", "import { TORUS_SAPPHIRE_NETWORK } from '@toruslabs/constants';\n\nconst SAPPHIRE_NODE_PUB_KEYS = {\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET]: [{\n    X: \"e0925898fee0e9e941fdca7ee88deec99939ae9407e923535c4d4a3a3ff8b052\",\n    Y: \"54b9fea924e3f3e40791f9987f4234ae4222412d65b74068032fa5d8b63375c1\"\n  }, {\n    X: \"9124cf1e280aab32ba50dffd2de81cecabc13d82d2c1fe9de82f3b3523f9b637\",\n    Y: \"fca939a1ceb42ce745c55b21ef094f543b457630cb63a94ef4f1afeee2b1f107\"\n  }, {\n    X: \"555f681a63d469cc6c3a58a97e29ebd277425f0e6159708e7c7bf05f18f89476\",\n    Y: \"606f2bcc0884fa5b64366fc3e8362e4939841b56acd60d5f4553cf36b891ac4e\"\n  }, {\n    X: \"2b5f58d8e340f1ab922e89b3a69a68930edfe51364644a456335e179bc130128\",\n    Y: \"4b4daa05939426e3cbe7d08f0e773d2bf36f64c00d04620ee6df2a7af4d2247\"\n  }, {\n    X: \"3ecbb6a68afe72cf34ec6c0a12b5cb78a0d2e83ba402983b6adbc5f36219861a\",\n    Y: \"dc1031c5cc8f0472bd521a62a64ebca9e163902c247bf05937daf4ae835091e4\"\n  }],\n  [TORUS_SAPPHIRE_NETWORK.SAPPHIRE_DEVNET]: [{\n    X: \"f74389b0a4c8d10d2a687ae575f69b20f412d41ab7f1fe6b358aa14871327247\",\n    Y: \"54e3a73098ed9bced3ef8821736e9794f9264a1420c0c7ad15d2fa617ba35ef7\"\n  }, {\n    X: \"bc38813a6873e526087918507c78fc3a61624670ee851ecfb4f3bef55d027b5a\",\n    Y: \"ac4b21229f662a0aefdfdac21cf17c3261a392c74a8790db218b34e3e4c1d56a\"\n  }, {\n    X: \"b56541684ea5fa40c8337b7688d502f0e9e092098962ad344c34e94f06d293fb\",\n    Y: \"759a998cef79d389082f9a75061a29190eec0cac99b8c25ddcf6b58569dad55c\"\n  }, {\n    X: \"7bcb058d4c6ffc6ba4bfdfd93d141af35a66338a62c7c27cdad2ae3f8289b767\",\n    Y: \"336ab1935e41ed4719e162587f0ab55518db4207a1eb36cc72303f1b86689d2b\"\n  }, {\n    X: \"bf12a136ef94399ea098f926f04e26a4ec4ac70f69cce274e8893704c4951773\",\n    Y: \"bdd44828020f52ce510e026338216ada184a6867eb4e19fb4c2d495d4a7e15e4\"\n  }]\n};\n\nexport { SAPPHIRE_NODE_PUB_KEYS };\n", "import { getSSSEndpoints, getRSSEndpoints, getTSSEndpoints } from './endpoints.js';\nimport { SAPPHIRE_NODE_PUB_KEYS } from './pubKeys.js';\n\nconst getSapphireNodeDetails = (sapphireNetwork, legacyNetwork, keyType) => {\n  return {\n    currentEpoch: \"1\",\n    torusNodeEndpoints: getSSSEndpoints(sapphireNetwork, legacyNetwork),\n    torusNodeSSSEndpoints: getSSSEndpoints(sapphireNetwork, legacyNetwork),\n    torusNodeRSSEndpoints: getRSSEndpoints(sapphireNetwork, legacyNetwork),\n    torusNodeTSSEndpoints: getTSSEndpoints(sapphireNetwork, legacyNetwork, keyType),\n    torusIndexes: [1, 2, 3, 4, 5],\n    torusNodePub: SAPPHIRE_NODE_PUB_KEYS[sapphireNetwork]\n  };\n};\n\nexport { getSapphireNodeDetails };\n", "import { TORUS_SAPPHIRE_NETWORK, TORUS_LEGACY_NETWORK, LEGACY_NETWORKS_ROUTE_MAP } from '@toruslabs/constants';\nimport { getSapphireNodeDetails } from './sapphireNetworkConfig.js';\n\nfunction fetchLocalConfig(network, keyType) {\n  if (Object.values(TORUS_SAPPHIRE_NETWORK).includes(network)) {\n    return getSapphireNodeDetails(network, undefined, keyType);\n  }\n  if (Object.values(TORUS_LEGACY_NETWORK).includes(network)) {\n    const legacyMap = LEGACY_NETWORKS_ROUTE_MAP[network];\n    if (legacyMap.migrationCompleted) return getSapphireNodeDetails(legacyMap.networkMigratedTo, network, keyType);\n  }\n  return undefined;\n}\n\nexport { fetchLocalConfig };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { FND_SERVER, TORUS_SAPPHIRE_NETWORK, KEY_TYPE, MULTI_CLUSTER_NETWORKS, TORUS_LEGACY_NETWORK, METADATA_MAP } from '@toruslabs/constants';\nimport { fetchLocalConfig } from '@toruslabs/fnd-base';\nimport { get } from '@toruslabs/http-helpers';\nimport logger from 'loglevel';\n\nconst log = logger.getLogger(\"fnd\");\nclass NodeDetailManager {\n  constructor({\n    network = TORUS_SAPPHIRE_NETWORK.SAPPHIRE_MAINNET,\n    keyType = KEY_TYPE.SECP256K1,\n    fndServerEndpoint,\n    enableLogging = false\n  } = {}) {\n    _defineProperty(this, \"fndServerEndpoint\", `${FND_SERVER}/node-details`);\n    _defineProperty(this, \"_currentEpoch\", \"1\");\n    _defineProperty(this, \"_keyType\", void 0);\n    _defineProperty(this, \"_torusNodeEndpoints\", []);\n    _defineProperty(this, \"_torusNodeRSSEndpoints\", []);\n    _defineProperty(this, \"_torusNodeSSSEndpoints\", []);\n    _defineProperty(this, \"_torusNodeTSSEndpoints\", []);\n    _defineProperty(this, \"_torusNodePub\", []);\n    _defineProperty(this, \"_torusIndexes\", []);\n    _defineProperty(this, \"updated\", void 0);\n    _defineProperty(this, \"network\", void 0);\n    this.network = network;\n    this._keyType = keyType;\n    this.updated = false;\n    if (fndServerEndpoint) {\n      this.fndServerEndpoint = fndServerEndpoint;\n    }\n    if (enableLogging) {\n      log.enableAll();\n    } else {\n      log.disableAll();\n    }\n  }\n  get _nodeDetails() {\n    return {\n      currentEpoch: this._currentEpoch,\n      torusNodeEndpoints: this._torusNodeEndpoints,\n      torusNodeSSSEndpoints: this._torusNodeSSSEndpoints,\n      torusNodeRSSEndpoints: this._torusNodeRSSEndpoints,\n      torusNodeTSSEndpoints: this._torusNodeTSSEndpoints,\n      torusNodePub: this._torusNodePub,\n      torusIndexes: this._torusIndexes,\n      updated: this.updated\n    };\n  }\n  async getNodeDetails({\n    verifier,\n    verifierId\n  }) {\n    try {\n      if (this.updated && !MULTI_CLUSTER_NETWORKS.includes(this.network)) return this._nodeDetails;\n      try {\n        const {\n          nodeDetails\n        } = await get(`${this.fndServerEndpoint}?network=${this.network}&verifier=${verifier}&verifierId=${verifierId}&keyType=${this._keyType}`);\n        this.setNodeDetails(nodeDetails);\n        return this._nodeDetails;\n      } catch (error) {\n        log.error(\"Failed to fetch node details from server, using local.\", error);\n      }\n      const nodeDetails = fetchLocalConfig(this.network, this._keyType);\n      if (!nodeDetails) throw new Error(\"Failed to fetch node details\");\n      this.setNodeDetails(nodeDetails);\n      return this._nodeDetails;\n    } catch (error) {\n      log.error(\"Failed to fetch node details\", error);\n      throw error;\n    }\n  }\n  async getMetadataUrl() {\n    if (Object.values(TORUS_LEGACY_NETWORK).includes(this.network)) {\n      return METADATA_MAP[this.network];\n    }\n    const nodeDetails = await this.getNodeDetails({\n      verifier: \"test-verifier\",\n      verifierId: \"test-verifier-id\"\n    });\n    return nodeDetails.torusNodeEndpoints[0].replace(\"/sss/jrpc\", \"/metadata\");\n  }\n  setNodeDetails(nodeDetails) {\n    const {\n      currentEpoch,\n      torusNodeEndpoints,\n      torusNodeSSSEndpoints,\n      torusNodeRSSEndpoints,\n      torusNodeTSSEndpoints,\n      torusNodePub,\n      torusIndexes\n    } = nodeDetails;\n    this._torusNodeEndpoints = torusNodeEndpoints;\n    this._torusNodeSSSEndpoints = torusNodeSSSEndpoints || [];\n    this._torusNodeRSSEndpoints = torusNodeRSSEndpoints || [];\n    this._torusNodeTSSEndpoints = torusNodeTSSEndpoints || [];\n    this._torusNodePub = torusNodePub;\n    this._torusIndexes = torusIndexes;\n    this._currentEpoch = currentEpoch;\n    this.updated = true;\n  }\n}\nvar NodeDetailManager$1 = NodeDetailManager;\n\nexport { NodeDetailManager$1 as default };\n", "import { register } from '@chaitanyapotti/register-service-worker';\nimport log from './utils/loglevel.js';\n\nconst registerServiceWorker = baseUrl => new Promise((resolve, reject) => {\n  const swUrl = `${baseUrl}sw.js`;\n  if (\"serviceWorker\" in window.navigator) {\n    // if swIntegrity is not calculated\n    register(swUrl, {\n      ready() {\n        log.info(\"App is being served from cache by a service worker.\\n For more details, visit https://goo.gl/AFskqB\");\n        resolve(undefined);\n      },\n      registered() {\n        log.info(\"Service worker has been registered.\");\n        resolve(undefined);\n      },\n      cached() {\n        log.info(\"Content has been cached for offline use.\");\n        resolve(undefined);\n      },\n      updatefound() {\n        log.info(\"New content is downloading.\");\n      },\n      updated() {\n        log.info(\"New content is available; please refresh.\");\n      },\n      offline() {\n        log.info(\"No internet connection found. App is running in offline mode.\");\n        reject(new Error(\"App is offline\"));\n      },\n      error(error) {\n        log.error(\"Error during service worker registration:\", error);\n        reject(error);\n      }\n    });\n  } else {\n    reject(new Error(\"Service workers are not supported\"));\n  }\n});\n\nexport { registerServiceWorker };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\n\nclass SentryHandler {\n  constructor(sentry) {\n    _defineProperty(this, \"sentry\", null);\n    this.sentry = sentry;\n  }\n  startSpan(context, callback) {\n    if (this.sentry) {\n      return this.sentry.startSpan(context, callback);\n    }\n    return callback(null);\n  }\n}\n\nexport { SentryHandler as default };\n", "const serializeError = async error => {\n  // Find first Error or create an \"unknown\" Error to keep stack trace.\n  const isError = error instanceof Error;\n  const isString = typeof error === \"string\";\n  const isApiErrorIndex = error && typeof error === \"object\" && \"status\" in error && \"type\" in error;\n  let err;\n  if (isApiErrorIndex) {\n    const apiError = error;\n    const contentType = apiError.headers.get(\"content-type\");\n    if (contentType.includes(\"application/json\")) {\n      const errJson = await apiError.json();\n      err = new Error((errJson === null || errJson === void 0 ? void 0 : errJson.error) || (errJson === null || errJson === void 0 ? void 0 : errJson.message) || JSON.stringify(errJson));\n    } else if (contentType.includes(\"text/plain\")) {\n      err = new Error(await apiError.text());\n    } else {\n      err = new Error(`${apiError.status} ${apiError.type.toString()} ${apiError.statusText}`);\n    }\n  } else if (isString) {\n    err = new Error(error);\n  } else if (isError) {\n    err = error;\n  } else {\n    err = new Error(\"Unknown error\");\n  }\n  return err;\n};\n\nexport { serializeError };\n", "import { ec as ec$1 } from 'elliptic';\n\nconst ec = new ec$1(\"secp256k1\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, n/no-unsupported-features/node-builtins\nconst browserCrypto = globalThis.crypto || globalThis.msCrypto || {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\nconst EC_GROUP_ORDER = Buffer.from(\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\", \"hex\");\nconst ZERO32 = Buffer.alloc(32, 0);\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\nfunction isScalar(x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey)) {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 &&\n  // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i]; // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  if (typeof browserCrypto.getRandomValues === \"undefined\") {\n    return Buffer.from(browserCrypto.randomBytes(size));\n  }\n  const arr = new Uint8Array(size);\n  browserCrypto.getRandomValues(arr);\n  return Buffer.from(arr);\n}\nasync function sha512(msg) {\n  if (!browserCrypto.createHash) {\n    const hash = await subtle.digest(\"SHA-512\", msg);\n    const result = new Uint8Array(hash);\n    return result;\n  }\n  const hash = browserCrypto.createHash(\"sha512\");\n  const result = hash.update(msg).digest();\n  return new Uint8Array(result);\n}\nfunction getAes(op) {\n  return async function (iv, key, data) {\n    if (subtle && subtle[op] && subtle.importKey) {\n      const importAlgorithm = {\n        name: \"AES-CBC\"\n      };\n      const cryptoKey = await subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n      const encAlgorithm = {\n        name: \"AES-CBC\",\n        iv\n      };\n      // encrypt and decrypt ops are not implemented in react-native-quick-crypto yet.\n      const result = await subtle[op](encAlgorithm, cryptoKey, data);\n      return Buffer.from(new Uint8Array(result));\n    } else if (op === \"encrypt\" && browserCrypto.createCipheriv) {\n      // This is available if crypto is polyfilled in react native environment\n      const cipher = browserCrypto.createCipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = cipher.update(data);\n      const secondChunk = cipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    } else if (op === \"decrypt\" && browserCrypto.createDecipheriv) {\n      const decipher = browserCrypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = decipher.update(data);\n      const secondChunk = decipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    }\n    throw new Error(`Unsupported operation: ${op}`);\n  };\n}\nconst aesCbcEncrypt = getAes(\"encrypt\");\nconst aesCbcDecrypt = getAes(\"decrypt\");\nasync function hmacSha256Sign(key, msg) {\n  if (!browserCrypto.createHmac) {\n    const importAlgorithm = {\n      name: \"HMAC\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    };\n    const cryptoKey = await subtle.importKey(\"raw\", new Uint8Array(key), importAlgorithm, false, [\"sign\", \"verify\"]);\n    const sig = await subtle.sign(\"HMAC\", cryptoKey, msg);\n    const result = Buffer.from(new Uint8Array(sig));\n    return result;\n  }\n  const hmac = browserCrypto.createHmac(\"sha256\", Buffer.from(key));\n  hmac.update(msg);\n  const result = hmac.digest();\n  return result;\n}\nasync function hmacSha256Verify(key, msg, sig) {\n  const expectedSig = await hmacSha256Sign(key, msg);\n  return equalConstTime(expectedSig, sig);\n}\n\n/**\n * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n * depending on your browser.\n */\nconst generatePrivate = function () {\n  let privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\nconst getPublic = function (privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"array\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nconst getPublicCompressed = function (privateKey) {\n  // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  const compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"array\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nconst sign = async function (privateKey, msg) {\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  return Buffer.from(ec.sign(msg, privateKey, {\n    canonical: true\n  }).toDER());\n};\nconst verify = async function (publicKey, msg, sig) {\n  assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n  if (publicKey.length === 65) {\n    assert(publicKey[0] === 4, \"Bad public key\");\n  }\n  if (publicKey.length === 33) {\n    assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n  }\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  if (ec.verify(msg, sig, publicKey)) {\n    return null;\n  }\n  throw new Error(\"Bad signature\");\n};\nconst derive = async function (privateKeyA, publicKeyB) {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toArray());\n};\nconst deriveUnpadded = derive;\nconst derivePadded = async function (privateKeyA, publicKeyB) {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toString(16, 64), \"hex\");\n};\nconst encrypt = async function (publicKeyTo, msg, opts) {\n  opts = opts || {};\n  let ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  // There is a very unlikely possibility that it is not a valid key\n  while (!isValidPrivateKey(ephemPrivateKey)) {\n    ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  }\n  const ephemPublicKey = getPublic(ephemPrivateKey);\n  const Px = await deriveUnpadded(ephemPrivateKey, publicKeyTo);\n  const hash = await sha512(Px);\n  const iv = opts.iv || randomBytes(16);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const data = await aesCbcEncrypt(iv, Buffer.from(encryptionKey), msg);\n  const ciphertext = data;\n  const dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n  const mac = await hmacSha256Sign(Buffer.from(macKey), dataToMac);\n  return {\n    iv,\n    ephemPublicKey,\n    ciphertext,\n    mac\n  };\n};\nconst decrypt = async function (privateKey, opts, _padding) {\n  const padding = _padding !== null && _padding !== void 0 ? _padding : false;\n  const deriveLocal = padding ? derivePadded : deriveUnpadded;\n  const Px = await deriveLocal(privateKey, opts.ephemPublicKey);\n  const hash = await sha512(Px);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const dataToMac = Buffer.concat([opts.iv, opts.ephemPublicKey, opts.ciphertext]);\n  const macGood = await hmacSha256Verify(Buffer.from(macKey), dataToMac, opts.mac);\n  if (!macGood && padding === false) {\n    return decrypt(privateKey, opts, true);\n  } else if (!macGood && padding === true) {\n    throw new Error(\"bad MAC after trying padded\");\n  }\n  const msg = await aesCbcDecrypt(opts.iv, Buffer.from(encryptionKey), opts.ciphertext);\n  return Buffer.from(new Uint8Array(msg));\n};\n\nexport { decrypt, derive, derivePadded, deriveUnpadded, encrypt, generatePrivate, getPublic, getPublicCompressed, sign, verify };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign } from '@toruslabs/eccrypto';\nimport { post, get } from '@toruslabs/http-helpers';\nimport { keccak256, encryptData, decryptData } from '@toruslabs/metadata-helpers';\nimport { REDIRECT_PARAMS_STORAGE_METHOD } from './enums.js';\nimport { are3PCSupported, storageAvailable } from './helpers.js';\nimport log from './loglevel.js';\n\nclass StorageHelper {\n  constructor(serverUrl) {\n    _defineProperty(this, \"currentStorageMethod\", REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE);\n    _defineProperty(this, \"isInitialized\", false);\n    _defineProperty(this, \"storageServerUrl\", \"https://session.web3auth.io\");\n    _defineProperty(this, \"localStorageAvailable\", true);\n    this.storageServerUrl = serverUrl;\n  }\n  get storageMethodUsed() {\n    return this.currentStorageMethod;\n  }\n  init() {\n    const support = are3PCSupported();\n    const localStorageAvailable = storageAvailable(REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE);\n    this.localStorageAvailable = localStorageAvailable;\n    if (support && localStorageAvailable) {\n      // use local storage as default for storing stuff\n      this.currentStorageMethod = REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE;\n    } else {\n      // use server store as default for storing stuff\n      this.currentStorageMethod = REDIRECT_PARAMS_STORAGE_METHOD.SERVER;\n    }\n    this.isInitialized = true;\n  }\n  async storeLoginDetails(params, scope) {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.SERVER) {\n      const privKey = keccak256(Buffer.from(scope, \"utf8\"));\n      const privKeyHex = privKey.toString(\"hex\");\n      const publicKeyHex = getPublic(privKey).toString(\"hex\");\n      const encData = await encryptData(privKeyHex, params);\n      const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n      await post(`${this.storageServerUrl}/store/set`, {\n        key: publicKeyHex,\n        data: encData,\n        signature\n      });\n    }\n    if (this.localStorageAvailable) window.localStorage.setItem(`torus_login_${scope}`, JSON.stringify(params));\n  }\n  async retrieveLoginDetails(scope) {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.localStorageAvailable) {\n      const loginDetails = window.localStorage.getItem(`torus_login_${scope}`);\n      if (loginDetails) return JSON.parse(loginDetails || \"{}\");\n    }\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.SERVER) {\n      const privKey = keccak256(Buffer.from(scope, \"utf8\"));\n      const privKeyHex = privKey.toString(\"hex\");\n      const publicKeyHex = getPublic(privKey).toString(\"hex\");\n      try {\n        const encData = await get(`${this.storageServerUrl}/store/get?key=${publicKeyHex}`);\n        if (encData.message) {\n          const currentLoginDetails = await decryptData(privKeyHex, encData.message);\n          return currentLoginDetails;\n        }\n      } catch (error) {\n        if (error.status === 404) {\n          log.warn(error, \"Session likely expired\");\n        } else {\n          throw error;\n        }\n      }\n    }\n  }\n  clearLoginDetailsStorage(scope) {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.localStorageAvailable) window.localStorage.removeItem(`torus_login_${scope}`);\n    // No need to clear server details cause they auto expire and scope is never re-used for different login attempts\n  }\n  clearOrphanedLoginDetails() {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (!this.localStorageAvailable) return;\n    const allStorageKeys = Object.keys(window.localStorage);\n    allStorageKeys.forEach(key => {\n      if (key.startsWith(\"torus_login_\")) {\n        window.localStorage.removeItem(key);\n      }\n    });\n    // No need to clear server details cause they auto expire and scope is never re-used for different login attempts\n  }\n}\n\nexport { StorageHelper as default };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { NodeDetailManager } from '@toruslabs/fetch-node-details';\nimport { Torus, keccak256 } from '@toruslabs/torus.js';\nimport createHandler from './handlers/HandlerFactory.js';\nimport { registerServiceWorker } from './registerServiceWorker.js';\nimport SentryHandler from './sentry.js';\nimport { UX_MODE, TORUS_METHOD, AGGREGATE_VERIFIER, SENTRY_TXNS } from './utils/enums.js';\nimport { serializeError } from './utils/error.js';\nimport { padUrlString, isFirefox, handleRedirectParameters } from './utils/helpers.js';\nimport log from './utils/loglevel.js';\nimport StorageHelper from './utils/StorageHelper.js';\n\nconst _excluded = [\"access_token\", \"id_token\"],\n  _excluded2 = [\"access_token\", \"id_token\"],\n  _excluded3 = [\"args\", \"method\"];\nclass CustomAuth {\n  constructor({\n    baseUrl,\n    network,\n    enableLogging = false,\n    redirectToOpener = false,\n    redirectPathName = \"redirect\",\n    apiKey = \"torus-default\",\n    uxMode = UX_MODE.POPUP,\n    locationReplaceOnRedirect = false,\n    popupFeatures,\n    storageServerUrl = \"https://session.web3auth.io\",\n    sentry,\n    enableOneKey = false,\n    web3AuthClientId,\n    useDkg,\n    metadataUrl = \"https://metadata.tor.us\",\n    keyType = \"secp256k1\",\n    serverTimeOffset = 0,\n    nodeDetails,\n    checkCommitment = true\n  }) {\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"config\", void 0);\n    _defineProperty(this, \"torus\", void 0);\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n    _defineProperty(this, \"storageHelper\", void 0);\n    _defineProperty(this, \"sentryHandler\", void 0);\n    if (!web3AuthClientId) throw new Error(\"Please provide a valid web3AuthClientId in constructor\");\n    if (!network) throw new Error(\"Please provide a valid network in constructor\");\n    this.isInitialized = false;\n    const baseUri = new URL(baseUrl);\n    this.config = {\n      baseUrl: padUrlString(baseUri),\n      get redirect_uri() {\n        return `${this.baseUrl}${redirectPathName}`;\n      },\n      redirectToOpener,\n      uxMode,\n      locationReplaceOnRedirect,\n      popupFeatures,\n      useDkg,\n      web3AuthClientId,\n      web3AuthNetwork: network,\n      keyType,\n      nodeDetails,\n      checkCommitment\n    };\n    const torus = new Torus({\n      network,\n      enableOneKey,\n      serverTimeOffset,\n      clientId: web3AuthClientId,\n      legacyMetadataHost: metadataUrl,\n      keyType\n    });\n    Torus.setAPIKey(apiKey);\n    this.torus = torus;\n    this.nodeDetailManager = new NodeDetailManager({\n      network\n    });\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.storageHelper = new StorageHelper(storageServerUrl);\n    this.sentryHandler = new SentryHandler(sentry);\n  }\n  async init({\n    skipSw = false,\n    skipInit = false,\n    skipPrefetch = false\n  } = {}) {\n    this.storageHelper.init();\n    if (skipInit) {\n      this.isInitialized = true;\n      return;\n    }\n    if (!skipSw) {\n      const fetchSwResponse = await fetch(`${this.config.baseUrl}sw.js`, {\n        cache: \"reload\"\n      });\n      if (fetchSwResponse.ok) {\n        try {\n          await registerServiceWorker(this.config.baseUrl);\n          this.isInitialized = true;\n          return;\n        } catch (error) {\n          log.warn(error);\n        }\n      } else {\n        throw new Error(\"Service worker is not being served. Please serve it\");\n      }\n    }\n    if (!skipPrefetch) {\n      // Skip the redirect check for firefox\n      if (isFirefox()) {\n        this.isInitialized = true;\n        return;\n      }\n      await this.handlePrefetchRedirectUri();\n      return;\n    }\n    this.isInitialized = true;\n  }\n  async triggerLogin(args) {\n    const {\n      verifier,\n      typeOfLogin,\n      clientId,\n      jwtParams,\n      hash,\n      queryParameters,\n      customState\n    } = args;\n    log.info(\"Verifier: \", verifier);\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    const loginHandler = createHandler({\n      typeOfLogin,\n      clientId,\n      verifier,\n      redirect_uri: this.config.redirect_uri,\n      redirectToOpener: this.config.redirectToOpener,\n      jwtParams,\n      uxMode: this.config.uxMode,\n      customState,\n      web3AuthClientId: this.config.web3AuthClientId,\n      web3AuthNetwork: this.config.web3AuthNetwork\n    });\n    let loginParams;\n    if (hash && queryParameters) {\n      const {\n        error,\n        hashParameters,\n        instanceParameters\n      } = handleRedirectParameters(hash, queryParameters);\n      if (error) throw new Error(error);\n      const {\n          access_token: accessToken,\n          id_token: idToken\n        } = hashParameters,\n        rest = _objectWithoutProperties(hashParameters, _excluded);\n      // State has to be last here otherwise it will be overwritten\n      loginParams = _objectSpread(_objectSpread({\n        accessToken,\n        idToken\n      }, rest), {}, {\n        state: instanceParameters\n      });\n    } else {\n      this.storageHelper.clearOrphanedLoginDetails();\n      if (this.config.uxMode === UX_MODE.REDIRECT) {\n        await this.storageHelper.storeLoginDetails({\n          method: TORUS_METHOD.TRIGGER_LOGIN,\n          args\n        }, loginHandler.nonce);\n      }\n      loginParams = await loginHandler.handleLoginWindow({\n        locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n        popupFeatures: this.config.popupFeatures\n      });\n      if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n    }\n    const userInfo = await loginHandler.getUserInfo(loginParams);\n    const torusKey = await this.getTorusKey(verifier, userInfo.verifierId, {\n      verifier_id: userInfo.verifierId\n    }, loginParams.idToken || loginParams.accessToken, userInfo.extraVerifierParams);\n    return _objectSpread(_objectSpread({}, torusKey), {}, {\n      userInfo: _objectSpread(_objectSpread({}, userInfo), loginParams)\n    });\n  }\n  async triggerAggregateLogin(args) {\n    // This method shall break if any of the promises fail. This behaviour is intended\n    const {\n      aggregateVerifierType,\n      verifierIdentifier,\n      subVerifierDetailsArray\n    } = args;\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (!aggregateVerifierType || !verifierIdentifier || !Array.isArray(subVerifierDetailsArray)) {\n      throw new Error(\"Invalid params. Missing aggregateVerifierType, verifierIdentifier or subVerifierDetailsArray\");\n    }\n    if (aggregateVerifierType === AGGREGATE_VERIFIER.SINGLE_VERIFIER_ID && subVerifierDetailsArray.length !== 1) {\n      throw new Error(\"Single id verifier can only have one sub verifier\");\n    }\n    const userInfoPromises = [];\n    const loginParamsArray = [];\n    for (const subVerifierDetail of subVerifierDetailsArray) {\n      const {\n        clientId,\n        typeOfLogin,\n        verifier,\n        jwtParams,\n        hash,\n        queryParameters,\n        customState\n      } = subVerifierDetail;\n      const loginHandler = createHandler({\n        typeOfLogin,\n        clientId,\n        verifier,\n        redirect_uri: this.config.redirect_uri,\n        redirectToOpener: this.config.redirectToOpener,\n        jwtParams,\n        uxMode: this.config.uxMode,\n        customState,\n        web3AuthClientId: this.config.web3AuthClientId,\n        web3AuthNetwork: this.config.web3AuthNetwork\n      });\n      // We let the user login to each verifier in a loop. Don't wait for key derivation here.!\n      let loginParams;\n      if (hash && queryParameters) {\n        const {\n          error,\n          hashParameters,\n          instanceParameters\n        } = handleRedirectParameters(hash, queryParameters);\n        if (error) throw new Error(error);\n        const {\n            access_token: accessToken,\n            id_token: idToken\n          } = hashParameters,\n          rest = _objectWithoutProperties(hashParameters, _excluded2);\n        // State has to be last here otherwise it will be overwritten\n        loginParams = _objectSpread(_objectSpread({\n          accessToken,\n          idToken\n        }, rest), {}, {\n          state: instanceParameters\n        });\n      } else {\n        this.storageHelper.clearOrphanedLoginDetails();\n        if (this.config.uxMode === UX_MODE.REDIRECT) {\n          await this.storageHelper.storeLoginDetails({\n            method: TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN,\n            args\n          }, loginHandler.nonce);\n        }\n        loginParams = await loginHandler.handleLoginWindow({\n          locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n          popupFeatures: this.config.popupFeatures\n        });\n        if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n      }\n      // Fail the method even if one promise fails\n\n      userInfoPromises.push(loginHandler.getUserInfo(loginParams));\n      loginParamsArray.push(loginParams);\n    }\n    const _userInfoArray = await Promise.all(userInfoPromises);\n    const userInfoArray = _userInfoArray.map(userInfo => _objectSpread(_objectSpread({}, userInfo), {}, {\n      aggregateVerifier: verifierIdentifier\n    }));\n    const aggregateVerifierParams = {\n      verify_params: [],\n      sub_verifier_ids: [],\n      verifier_id: \"\"\n    };\n    const aggregateIdTokenSeeds = [];\n    let aggregateVerifierId = \"\";\n    let extraVerifierParams = {};\n    for (let index = 0; index < subVerifierDetailsArray.length; index += 1) {\n      const loginParams = loginParamsArray[index];\n      const {\n        idToken,\n        accessToken\n      } = loginParams;\n      const userInfo = userInfoArray[index];\n      aggregateVerifierParams.verify_params.push({\n        verifier_id: userInfo.verifierId,\n        idtoken: idToken || accessToken\n      });\n      aggregateVerifierParams.sub_verifier_ids.push(userInfo.verifier);\n      aggregateIdTokenSeeds.push(idToken || accessToken);\n      aggregateVerifierId = userInfo.verifierId; // using last because idk\n      extraVerifierParams = userInfo.extraVerifierParams;\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(Buffer.from(aggregateIdTokenSeeds.join(String.fromCharCode(29)), \"utf8\")).slice(2);\n    aggregateVerifierParams.verifier_id = aggregateVerifierId;\n    const torusKey = await this.getTorusKey(verifierIdentifier, aggregateVerifierId, aggregateVerifierParams, aggregateIdToken, extraVerifierParams);\n    return _objectSpread(_objectSpread({}, torusKey), {}, {\n      userInfo: userInfoArray.map((x, index) => _objectSpread(_objectSpread({}, x), loginParamsArray[index]))\n    });\n  }\n  async getTorusKey(verifier, verifierId, verifierParams, idToken, additionalParams) {\n    const nodeDetails = await this.sentryHandler.startSpan({\n      name: SENTRY_TXNS.FETCH_NODE_DETAILS\n    }, async () => {\n      if (this.config.nodeDetails) {\n        return this.config.nodeDetails;\n      }\n      return this.nodeDetailManager.getNodeDetails({\n        verifier,\n        verifierId\n      });\n    });\n    log.debug(\"torus-direct/getTorusKey\", {\n      torusNodeEndpoints: nodeDetails.torusNodeEndpoints\n    });\n    const sharesResponse = await this.sentryHandler.startSpan({\n      name: SENTRY_TXNS.FETCH_SHARES\n    }, async () => {\n      return this.torus.retrieveShares({\n        endpoints: nodeDetails.torusNodeEndpoints,\n        indexes: nodeDetails.torusIndexes,\n        verifier,\n        verifierParams,\n        idToken,\n        nodePubkeys: nodeDetails.torusNodePub,\n        extraParams: _objectSpread({}, additionalParams),\n        useDkg: this.config.useDkg,\n        checkCommitment: this.config.checkCommitment\n      });\n    });\n    log.debug(\"torus-direct/getTorusKey\", {\n      retrieveShares: sharesResponse\n    });\n    return sharesResponse;\n  }\n  async getAggregateTorusKey(verifier, verifierId,\n  // unique identifier for user e.g. sub on jwt\n  subVerifierInfoArray) {\n    const aggregateVerifierParams = {\n      verify_params: [],\n      sub_verifier_ids: [],\n      verifier_id: \"\"\n    };\n    const aggregateIdTokenSeeds = [];\n    let extraVerifierParams = {};\n    for (let index = 0; index < subVerifierInfoArray.length; index += 1) {\n      const userInfo = subVerifierInfoArray[index];\n      aggregateVerifierParams.verify_params.push({\n        verifier_id: verifierId,\n        idtoken: userInfo.idToken\n      });\n      aggregateVerifierParams.sub_verifier_ids.push(userInfo.verifier);\n      aggregateIdTokenSeeds.push(userInfo.idToken);\n      extraVerifierParams = userInfo.extraVerifierParams;\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(Buffer.from(aggregateIdTokenSeeds.join(String.fromCharCode(29)), \"utf8\")).slice(2);\n    aggregateVerifierParams.verifier_id = verifierId;\n    return this.getTorusKey(verifier, verifierId, aggregateVerifierParams, aggregateIdToken, extraVerifierParams);\n  }\n  async getRedirectResult({\n    replaceUrl = true,\n    clearLoginDetails = true\n  } = {}) {\n    await this.init({\n      skipInit: true\n    });\n    const url = new URL(window.location.href);\n    const hash = url.hash.substring(1);\n    const queryParams = {};\n    url.searchParams.forEach((value, key) => {\n      queryParams[key] = value;\n    });\n    if (!hash && Object.keys(queryParams).length === 0) {\n      throw new Error(\"Found Empty hash and query parameters. This can happen if user reloads the page\");\n    }\n    const {\n      error,\n      instanceParameters,\n      hashParameters\n    } = handleRedirectParameters(hash, queryParams);\n    const {\n      instanceId\n    } = instanceParameters;\n    log.info(instanceId, \"instanceId\");\n    const loginDetails = await this.storageHelper.retrieveLoginDetails(instanceId);\n    const _ref = loginDetails || {},\n      {\n        args,\n        method\n      } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded3);\n    log.info(args, method);\n    if (error) {\n      return {\n        error,\n        state: instanceParameters || {},\n        method,\n        result: {},\n        hashParameters,\n        args\n      };\n    }\n    let result;\n    try {\n      if (method === TORUS_METHOD.TRIGGER_LOGIN) {\n        const methodArgs = args;\n        methodArgs.hash = hash;\n        methodArgs.queryParameters = queryParams;\n        result = await this.triggerLogin(methodArgs);\n      } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN) {\n        const methodArgs = args;\n        methodArgs.subVerifierDetailsArray.forEach(x => {\n          x.hash = hash;\n          x.queryParameters = queryParams;\n        });\n        result = await this.triggerAggregateLogin(methodArgs);\n      }\n    } catch (err) {\n      const serializedError = await serializeError(err);\n      log.error(serializedError);\n      if (clearLoginDetails) {\n        this.storageHelper.clearLoginDetailsStorage(instanceId);\n      }\n      return _objectSpread({\n        error: `${serializedError.message || \"\"}`,\n        state: instanceParameters || {},\n        method,\n        result: {},\n        hashParameters,\n        args\n      }, rest);\n    }\n    if (!result) return _objectSpread({\n      error: `Init parameters not found. It might be because storage is not available. Please retry the login in a different browser. Used storage method: ${this.storageHelper.storageMethodUsed}`,\n      state: instanceParameters || {},\n      method,\n      result: {},\n      hashParameters,\n      args\n    }, rest);\n    if (replaceUrl) {\n      const cleanUrl = window.location.origin + window.location.pathname;\n      window.history.replaceState(_objectSpread(_objectSpread({}, window.history.state), {}, {\n        as: cleanUrl,\n        url: cleanUrl\n      }), \"\", cleanUrl);\n    }\n    if (clearLoginDetails) {\n      this.storageHelper.clearLoginDetailsStorage(instanceId);\n    }\n    return _objectSpread({\n      method,\n      result,\n      state: instanceParameters || {},\n      hashParameters,\n      args\n    }, rest);\n  }\n  async handlePrefetchRedirectUri() {\n    if (!document) return Promise.resolve();\n    return new Promise((resolve, reject) => {\n      const redirectHtml = document.createElement(\"link\");\n      redirectHtml.href = this.config.redirect_uri;\n      if (window.location.origin !== new URL(this.config.redirect_uri).origin) redirectHtml.crossOrigin = \"anonymous\";\n      redirectHtml.type = \"text/html\";\n      redirectHtml.rel = \"prefetch\";\n      const resolveFn = () => {\n        this.isInitialized = true;\n        resolve();\n      };\n      try {\n        if (redirectHtml.relList && redirectHtml.relList.supports) {\n          if (redirectHtml.relList.supports(\"prefetch\")) {\n            redirectHtml.onload = resolveFn;\n            redirectHtml.onerror = () => {\n              reject(new Error(`Please serve redirect.html present in serviceworker folder of this package on ${this.config.redirect_uri}`));\n            };\n            document.head.appendChild(redirectHtml);\n          } else {\n            // Link prefetch is not supported. pass through\n            resolveFn();\n          }\n        } else {\n          // Link prefetch is not detectable. pass through\n          resolveFn();\n        }\n      } catch (err) {\n        resolveFn();\n      }\n    });\n  }\n}\nvar CustomAuth$1 = CustomAuth;\n\nexport { CustomAuth$1 as default };\n", "import { ec as ec$1 } from 'elliptic';\n\nconst ec = new ec$1(\"secp256k1\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, n/no-unsupported-features/node-builtins\nconst browserCrypto = globalThis.crypto || globalThis.msCrypto || {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\nconst EC_GROUP_ORDER = Buffer.from(\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\", \"hex\");\nconst ZERO32 = Buffer.alloc(32, 0);\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\nfunction isScalar(x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey)) {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 &&\n  // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i]; // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  if (typeof browserCrypto.getRandomValues === \"undefined\") {\n    return Buffer.from(browserCrypto.randomBytes(size));\n  }\n  const arr = new Uint8Array(size);\n  browserCrypto.getRandomValues(arr);\n  return Buffer.from(arr);\n}\nasync function sha512(msg) {\n  if (!browserCrypto.createHash) {\n    const hash = await subtle.digest(\"SHA-512\", msg);\n    const result = new Uint8Array(hash);\n    return result;\n  }\n  const hash = browserCrypto.createHash(\"sha512\");\n  const result = hash.update(msg).digest();\n  return new Uint8Array(result);\n}\nfunction getAes(op) {\n  return async function (iv, key, data) {\n    if (subtle && subtle[op] && subtle.importKey) {\n      const importAlgorithm = {\n        name: \"AES-CBC\"\n      };\n      const cryptoKey = await subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n      const encAlgorithm = {\n        name: \"AES-CBC\",\n        iv\n      };\n      // encrypt and decrypt ops are not implemented in react-native-quick-crypto yet.\n      const result = await subtle[op](encAlgorithm, cryptoKey, data);\n      return Buffer.from(new Uint8Array(result));\n    } else if (op === \"encrypt\" && browserCrypto.createCipheriv) {\n      // This is available if crypto is polyfilled in react native environment\n      const cipher = browserCrypto.createCipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = cipher.update(data);\n      const secondChunk = cipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    } else if (op === \"decrypt\" && browserCrypto.createDecipheriv) {\n      const decipher = browserCrypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = decipher.update(data);\n      const secondChunk = decipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    }\n    throw new Error(`Unsupported operation: ${op}`);\n  };\n}\nconst aesCbcEncrypt = getAes(\"encrypt\");\nconst aesCbcDecrypt = getAes(\"decrypt\");\nasync function hmacSha256Sign(key, msg) {\n  if (!browserCrypto.createHmac) {\n    const importAlgorithm = {\n      name: \"HMAC\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    };\n    const cryptoKey = await subtle.importKey(\"raw\", new Uint8Array(key), importAlgorithm, false, [\"sign\", \"verify\"]);\n    const sig = await subtle.sign(\"HMAC\", cryptoKey, msg);\n    const result = Buffer.from(new Uint8Array(sig));\n    return result;\n  }\n  const hmac = browserCrypto.createHmac(\"sha256\", Buffer.from(key));\n  hmac.update(msg);\n  const result = hmac.digest();\n  return result;\n}\nasync function hmacSha256Verify(key, msg, sig) {\n  const expectedSig = await hmacSha256Sign(key, msg);\n  return equalConstTime(expectedSig, sig);\n}\n\n/**\n * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n * depending on your browser.\n */\nconst generatePrivate = function () {\n  let privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\nconst getPublic = function (privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"array\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nconst getPublicCompressed = function (privateKey) {\n  // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  const compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"array\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nconst sign = async function (privateKey, msg) {\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  return Buffer.from(ec.sign(msg, privateKey, {\n    canonical: true\n  }).toDER());\n};\nconst verify = async function (publicKey, msg, sig) {\n  assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n  if (publicKey.length === 65) {\n    assert(publicKey[0] === 4, \"Bad public key\");\n  }\n  if (publicKey.length === 33) {\n    assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n  }\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  if (ec.verify(msg, sig, publicKey)) {\n    return null;\n  }\n  throw new Error(\"Bad signature\");\n};\nconst derive = async function (privateKeyA, publicKeyB) {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toArray());\n};\nconst deriveUnpadded = derive;\nconst derivePadded = async function (privateKeyA, publicKeyB) {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toString(16, 64), \"hex\");\n};\nconst encrypt = async function (publicKeyTo, msg, opts) {\n  opts = opts || {};\n  let ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  // There is a very unlikely possibility that it is not a valid key\n  while (!isValidPrivateKey(ephemPrivateKey)) {\n    ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  }\n  const ephemPublicKey = getPublic(ephemPrivateKey);\n  const Px = await deriveUnpadded(ephemPrivateKey, publicKeyTo);\n  const hash = await sha512(Px);\n  const iv = opts.iv || randomBytes(16);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const data = await aesCbcEncrypt(iv, Buffer.from(encryptionKey), msg);\n  const ciphertext = data;\n  const dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n  const mac = await hmacSha256Sign(Buffer.from(macKey), dataToMac);\n  return {\n    iv,\n    ephemPublicKey,\n    ciphertext,\n    mac\n  };\n};\nconst decrypt = async function (privateKey, opts, _padding) {\n  const padding = _padding !== null && _padding !== void 0 ? _padding : false;\n  const deriveLocal = padding ? derivePadded : deriveUnpadded;\n  const Px = await deriveLocal(privateKey, opts.ephemPublicKey);\n  const hash = await sha512(Px);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const dataToMac = Buffer.concat([opts.iv, opts.ephemPublicKey, opts.ciphertext]);\n  const macGood = await hmacSha256Verify(Buffer.from(macKey), dataToMac, opts.mac);\n  if (!macGood && padding === false) {\n    return decrypt(privateKey, opts, true);\n  } else if (!macGood && padding === true) {\n    throw new Error(\"bad MAC after trying padded\");\n  }\n  const msg = await aesCbcDecrypt(opts.iv, Buffer.from(encryptionKey), opts.ciphertext);\n  return Buffer.from(new Uint8Array(msg));\n};\n\nexport { decrypt, derive, derivePadded, deriveUnpadded, encrypt, generatePrivate, getPublic, getPublicCompressed, sign, verify };\n", "import { serializeError } from '@toruslabs/customauth';\nimport { encrypt as encrypt$1, decrypt as decrypt$1, generatePrivate } from '@toruslabs/eccrypto';\nimport { keccak256, toChecksumAddress } from '@toruslabs/torus.js';\nimport BN from 'bn.js';\nimport { ec } from 'elliptic';\n\nconst secp256k1 = new ec(\"secp256k1\");\n\n// Wrappers around ECC encrypt/decrypt to use the hex serialization\n// TODO: refactor to take BN\nasync function encrypt(publicKey, msg) {\n  const encryptedDetails = await encrypt$1(publicKey, msg);\n  return {\n    ciphertext: encryptedDetails.ciphertext.toString(\"hex\"),\n    ephemPublicKey: encryptedDetails.ephemPublicKey.toString(\"hex\"),\n    iv: encryptedDetails.iv.toString(\"hex\"),\n    mac: encryptedDetails.mac.toString(\"hex\")\n  };\n}\nasync function decrypt(privKey, msg) {\n  const bufferEncDetails = {\n    ciphertext: Buffer.from(msg.ciphertext, \"hex\"),\n    ephemPublicKey: Buffer.from(msg.ephemPublicKey, \"hex\"),\n    iv: Buffer.from(msg.iv, \"hex\"),\n    mac: Buffer.from(msg.mac, \"hex\")\n  };\n  return decrypt$1(privKey, bufferEncDetails);\n}\nfunction isEmptyObject(obj) {\n  return Object.keys(obj).length === 0 && obj.constructor === Object;\n}\nconst isErrorObj = err => err && err.stack && err.message !== \"\";\nasync function prettyPrintError(error) {\n  if (isErrorObj(error)) {\n    return error;\n  }\n  return serializeError(error);\n}\nfunction generateAddressFromPublicKey(publicKey) {\n  const ethAddressLower = `0x${keccak256(publicKey).slice(64 - 38)}`;\n  return toChecksumAddress(ethAddressLower);\n}\nfunction normalize(input) {\n  if (!input) {\n    return undefined;\n  }\n  let hexString;\n  if (typeof input === \"number\") {\n    hexString = input.toString(16);\n    if (hexString.length % 2) {\n      hexString = `0${hexString}`;\n    }\n  }\n  if (typeof input === \"string\") {\n    hexString = input.toLowerCase();\n  }\n  return `0x${hexString}`;\n}\nfunction generatePrivateExcludingIndexes(shareIndexes) {\n  const key = new BN(generatePrivate());\n  if (shareIndexes.find(el => el.eq(key))) {\n    return generatePrivateExcludingIndexes(shareIndexes);\n  }\n  return key;\n}\nconst KEY_NOT_FOUND = \"KEY_NOT_FOUND\";\nconst SHARE_DELETED = \"SHARE_DELETED\";\nfunction derivePubKeyXFromPolyID(polyID) {\n  return polyID.split(\"|\")[0].slice(2);\n}\nfunction stripHexPrefix(str) {\n  if (str.slice(0, 2) === \"0x\") return str.slice(2);\n  return str;\n}\nfunction generateID() {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return `${Math.random().toString(36).substr(2, 9)}`;\n}\n\nexport { KEY_NOT_FOUND, SHARE_DELETED, decrypt, derivePubKeyXFromPolyID, encrypt, generateAddressFromPublicKey, generateID, generatePrivateExcludingIndexes, isEmptyObject, isErrorObj, normalize, prettyPrintError, secp256k1, stripHexPrefix };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { secp256k1 } from '../utils.js';\n\nclass Point {\n  constructor(x, y) {\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    this.x = new BN(x, \"hex\");\n    this.y = new BN(y, \"hex\");\n  }\n  static fromScalar(s, ec) {\n    const p = ec.g.mul(s);\n    return Point.fromElliptic(p);\n  }\n\n  /**\n   * @deprecated Use `fromSEC1` instead.\n   */\n  static fromCompressedPub(value) {\n    const key = secp256k1.keyFromPublic(value, \"hex\");\n    const pt = key.getPublic();\n    return new Point(pt.getX(), pt.getY());\n  }\n  static fromJSON(value) {\n    const {\n      x,\n      y\n    } = value;\n    return new Point(x, y);\n  }\n  static fromElliptic(p) {\n    if (p.isInfinity()) {\n      return new Point(null, null);\n    }\n    return new Point(p.getX(), p.getY());\n  }\n\n  /**\n   * Construct a point from SEC1 format.\n   */\n  static fromSEC1(ec, encodedPoint) {\n    // \"elliptic\"@6.5.4 can't decode identity.\n    if (encodedPoint.length === 2 && encodedPoint === \"00\") {\n      const identity = ec.g.mul(new BN(0));\n      return Point.fromElliptic(identity);\n    }\n    const key = ec.keyFromPublic(encodedPoint, \"hex\");\n    const pt = key.getPublic();\n    return Point.fromElliptic(pt);\n  }\n\n  /**\n   * @deprecated Use `toSEC1` instead.\n   *\n   * complies with EC and elliptic pub key types\n   */\n  encode(enc) {\n    switch (enc) {\n      case \"arr\":\n        return Buffer.concat([Buffer.from(\"0x04\", \"hex\"), Buffer.from(this.x.toString(\"hex\"), \"hex\"), Buffer.from(this.y.toString(\"hex\"), \"hex\")]);\n      case \"elliptic-compressed\":\n        {\n          const ec = secp256k1;\n          const key = ec.keyFromPublic({\n            x: this.x.toString(\"hex\"),\n            y: this.y.toString(\"hex\")\n          }, \"hex\");\n          return Buffer.from(key.getPublic(true, \"hex\"));\n        }\n      default:\n        throw new Error(\"encoding doesnt exist in Point\");\n    }\n  }\n  toEllipticPoint(ec) {\n    if (this.isIdentity()) {\n      return ec.g.mul(new BN(0));\n    }\n    const keyPair = ec.keyFromPublic({\n      x: this.x.toString(\"hex\"),\n      y: this.y.toString(\"hex\")\n    }, \"hex\");\n    return keyPair.getPublic();\n  }\n\n  /**\n   * Returns this point encoded in SEC1 format.\n   * @param ec - Curve which point is on.\n   * @param compressed - Whether to use compressed format.\n   * @returns The SEC1-encoded point.\n   */\n  toSEC1(ec, compressed = false) {\n    // \"elliptic\"@6.5.4 can't encode identity.\n    if (this.isIdentity()) {\n      return Buffer.from(\"00\", \"hex\");\n    }\n    const p = this.toEllipticPoint(ec);\n    return Buffer.from(p.encode(\"hex\", compressed), \"hex\");\n  }\n  toJSON() {\n    return {\n      x: this.x.toString(\"hex\"),\n      y: this.y.toString(\"hex\")\n    };\n  }\n  isIdentity() {\n    return this.x === null && this.y === null;\n  }\n  equals(p) {\n    if (this.isIdentity()) {\n      return p.isIdentity();\n    }\n    return this.x.eq(p.x) && this.y.eq(p.y);\n  }\n}\nvar Point$1 = Point;\n\nexport { Point$1 as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { secp256k1 } from '../utils.js';\nimport { getPubKeyPoint } from './BNUtils.js';\nimport PublicPolynomial from './PublicPolynomial.js';\nimport Share from './Share.js';\n\n// @flow\n\nclass Polynomial {\n  constructor(polynomial) {\n    _defineProperty(this, \"polynomial\", void 0);\n    _defineProperty(this, \"publicPolynomial\", void 0);\n    this.polynomial = polynomial;\n  }\n  static fromJSON(value) {\n    const {\n      polynomial\n    } = value;\n    return new Polynomial(polynomial.map(x => new BN(x, \"hex\")));\n  }\n  getThreshold() {\n    return this.polynomial.length;\n  }\n  polyEval(x) {\n    const tmpX = new BN(x, \"hex\");\n    let xi = new BN(tmpX);\n    let sum = new BN(0);\n    sum = sum.add(this.polynomial[0]);\n    for (let i = 1; i < this.polynomial.length; i += 1) {\n      const tmp = xi.mul(this.polynomial[i]);\n      sum = sum.add(tmp);\n      sum = sum.umod(secp256k1.curve.n);\n      xi = xi.mul(new BN(tmpX));\n      xi = xi.umod(secp256k1.curve.n);\n    }\n    return sum;\n  }\n  generateShares(shareIndexes) {\n    const newShareIndexes = shareIndexes.map(index => {\n      if (typeof index === \"number\") {\n        return new BN(index);\n      }\n      if (index instanceof BN) {\n        return index;\n      }\n      if (typeof index === \"string\") {\n        return new BN(index, \"hex\");\n      }\n      return index;\n    });\n    const shares = {};\n    for (let x = 0; x < newShareIndexes.length; x += 1) {\n      shares[newShareIndexes[x].toString(\"hex\")] = new Share(newShareIndexes[x], this.polyEval(newShareIndexes[x]));\n    }\n    return shares;\n  }\n  getPublicPolynomial() {\n    const polynomialCommitments = [];\n    for (let i = 0; i < this.polynomial.length; i += 1) {\n      polynomialCommitments.push(getPubKeyPoint(this.polynomial[i]));\n    }\n    this.publicPolynomial = new PublicPolynomial(polynomialCommitments);\n    return this.publicPolynomial;\n  }\n  getPolynomialID() {\n    return this.publicPolynomial.polynomialId;\n  }\n  toJSON() {\n    return {\n      polynomial: this.polynomial.map(x => x.toString(\"hex\"))\n    };\n  }\n}\nvar Polynomial$1 = Polynomial;\n\nexport { Polynomial$1 as default };\n", "import { getPublic } from '@toruslabs/eccrypto';\nimport BN from 'bn.js';\nimport { secp256k1 } from '../utils.js';\nimport Point from './Point.js';\n\n// These functions are here because BN can't be extended\nconst toPrivKeyEC = bn => secp256k1.keyFromPrivate(bn.toString(\"hex\", 64));\nconst toPrivKeyECC = bn => {\n  const tmp = new BN(bn, \"hex\");\n  return Buffer.from(tmp.toString(\"hex\", 64), \"hex\");\n};\nconst getPubKeyEC = bn => secp256k1.keyFromPrivate(bn.toString(\"hex\", 64)).getPublic();\nconst getPubKeyECC = bn => getPublic(toPrivKeyECC(bn));\nconst getPubKeyPoint = bn => {\n  const pubKeyEc = getPubKeyEC(bn);\n  return new Point(pubKeyEc.getX().toString(\"hex\"), pubKeyEc.getY().toString(\"hex\"));\n};\n\nexport { getPubKeyEC, getPubKeyECC, getPubKeyPoint, toPrivKeyEC, toPrivKeyECC };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Point from './Point.js';\n\nclass PublicPolynomial {\n  constructor(polynomialCommitments) {\n    _defineProperty(this, \"polynomialCommitments\", void 0);\n    _defineProperty(this, \"polynomialId\", void 0);\n    this.polynomialCommitments = polynomialCommitments;\n  }\n  static fromJSON(value) {\n    const points = value.polynomialCommitments.map(x => Point.fromJSON(x));\n    return new PublicPolynomial(points);\n  }\n  getThreshold() {\n    return this.polynomialCommitments.length;\n  }\n  getPolynomialID() {\n    let idSeed = \"\";\n    for (let i = 0; i < this.polynomialCommitments.length; i += 1) {\n      let nextChunk = this.polynomialCommitments[i].encode(\"elliptic-compressed\").toString();\n      if (i !== 0) {\n        nextChunk = `|${nextChunk}`;\n      }\n      idSeed += nextChunk;\n    }\n    this.polynomialId = idSeed;\n    return this.polynomialId;\n  }\n  toJSON() {\n    return {\n      polynomialCommitments: this.polynomialCommitments\n    };\n  }\n}\n\n// @flow\n\nvar PublicPolynomial$1 = PublicPolynomial;\n\nexport { PublicPolynomial$1 as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { getPubKeyPoint } from './BNUtils.js';\nimport PublicShare from './PublicShare.js';\n\nclass Share {\n  constructor(shareIndex, share) {\n    _defineProperty(this, \"share\", void 0);\n    _defineProperty(this, \"shareIndex\", void 0);\n    this.share = new BN(share, \"hex\");\n    this.shareIndex = new BN(shareIndex, \"hex\");\n  }\n  static fromJSON(value) {\n    const {\n      share,\n      shareIndex\n    } = value;\n    return new Share(shareIndex, share);\n  }\n  getPublicShare() {\n    return new PublicShare(this.shareIndex, getPubKeyPoint(this.share));\n  }\n  toJSON() {\n    return {\n      share: this.share.toString(\"hex\"),\n      shareIndex: this.shareIndex.toString(\"hex\")\n    };\n  }\n}\nvar Share$1 = Share;\n\nexport { Share$1 as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport Point from './Point.js';\n\nclass PublicShare {\n  constructor(shareIndex, shareCommitment) {\n    _defineProperty(this, \"shareCommitment\", void 0);\n    _defineProperty(this, \"shareIndex\", void 0);\n    this.shareCommitment = new Point(shareCommitment.x, shareCommitment.y);\n    this.shareIndex = new BN(shareIndex, \"hex\");\n  }\n  static fromJSON(value) {\n    const {\n      shareCommitment,\n      shareIndex\n    } = value;\n    return new PublicShare(shareIndex, Point.fromJSON(shareCommitment));\n  }\n  toJSON() {\n    return {\n      shareCommitment: this.shareCommitment,\n      shareIndex: this.shareIndex.toString(\"hex\")\n    };\n  }\n}\nvar PublicShare$1 = PublicShare;\n\n// @flow\n\nexport { PublicShare$1 as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Share from './Share.js';\n\nclass ShareStore {\n  constructor(share, polynomialID) {\n    _defineProperty(this, \"share\", void 0);\n    _defineProperty(this, \"polynomialID\", void 0);\n    this.share = share;\n    this.polynomialID = polynomialID;\n  }\n  static fromJSON(value) {\n    const {\n      share,\n      polynomialID\n    } = value;\n    return new ShareStore(Share.fromJSON(share), polynomialID);\n  }\n  toJSON() {\n    return {\n      share: this.share,\n      polynomialID: this.polynomialID.toString()\n    };\n  }\n}\n\n// @flow\n\nvar ShareStore$1 = ShareStore;\n\nexport { ShareStore$1 as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { CustomError } from 'ts-custom-error';\n\n// @flow\n\nclass TkeyError extends CustomError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(message);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"message\", void 0);\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"TkeyError\"\n    });\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message\n    };\n  }\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport { TkeyError };\n", "const ONE_KEY_DELETE_NONCE = \"__ONE_KEY_DELETE_NONCE__\";\nconst ONE_KEY_NAMESPACE = \"noncev2\";\n\nexport { ONE_KEY_DELETE_NONCE, ONE_KEY_NAMESPACE };\n"],
  "mappings": "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",
  "names": ["register", "emit", "unregister", "KeyType", "import_base64url", "log$1", "base64url", "base64url", "deepmerge", "import_deepmerge", "deepmerge", "import_deepmerge", "deepmerge", "import_deepmerge", "import_loglevel", "deepmerge", "log", "import_deepmerge", "import_loglevel", "deepmerge", "log", "import_base64url", "import_deepmerge", "import_loglevel", "log", "deepmerge", "base64url", "import_deepmerge", "_excluded", "deepmerge", "import_deepmerge", "deepmerge", "import_deepmerge", "deepmerge", "TORUS_LEGACY_NETWORK", "TORUS_SAPPHIRE_NETWORK", "PROXY_CONTRACT_ADDRESS", "LEGACY_NETWORKS_ROUTE_MAP", "TORUS_LEGACY_NETWORK", "TORUS_SAPPHIRE_NETWORK", "NETWORK_MAP", "SIGNER_MAP", "METADATA_MAP", "KEY_TYPE", "TORUS_SAPPHIRE_NETWORK", "LEGACY_NETWORKS_ROUTE_MAP", "KEY_TYPE", "TORUS_SAPPHIRE_NETWORK", "TORUS_SAPPHIRE_NETWORK", "TORUS_LEGACY_NETWORK", "LEGACY_NETWORKS_ROUTE_MAP", "import_loglevel", "log", "logger", "nodeDetails", "ec$1", "_excluded", "_excluded2", "_excluded3", "keccak256", "import_elliptic", "ec", "ec$1", "browserCrypto", "subtle", "EC_GROUP_ORDER", "ZERO32", "assert", "isScalar", "isValidPrivateKey", "hash", "result", "getAes", "aesCbcEncrypt", "aesCbcDecrypt", "getPublic", "assert", "isValidPrivateKey", "ec", "getPublic", "aesCbcEncrypt", "aesCbcDecrypt", "import_elliptic", "encrypt", "decrypt", "keccak256", "BN", "import_bn", "BN", "ec", "import_bn", "import_bn", "BN", "getPublic", "import_bn", "import_bn", "BN", "BN", "BN"]
}
